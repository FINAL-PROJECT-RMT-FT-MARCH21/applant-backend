{"version":3,"sources":["components/Admin/Admin.js","components/Navbar/Navbar.js","components/Message/Message.js","components/Parallax/Parallax.js","components/Homepage/Homepage.js","components/PlantDetails/PlantDetails.js","components/Blog/Blog.js","components/Store/Store.js","components/Profile/Profile.js","components/StoreItem.js","components/ShoppingCart.js","components/CheckoutForm.js","components/Login/Login.js","components/Signup/Signup.js","components/DeleteUser/DeleteUser.js","components/NewPlant/NewPlant.js","components/EditPlant/EditPlant.js","components/DeletePlant/DeletePlant.js","components/NewPost/NewPost.js","components/EditPost/EditPost.js","components/DeletePost/DeletePost.js","components/Modal/Modal.js","components/Footer/Footer.js","App.js"],"names":["Admin","state","user","_id","username","password","admin","favoritePlants","cart","totalPrice","newPlant","commonName","botanicalName","type","maintenance","water","exposure","safety","purifying","about","price","stock","inStore","newPost","adminPermissions","word","toUpperCase","slice","_this2","this","react_default","a","createElement","className","onClick","props","modalAction","users","map","index","react_router_dom","concat","src","alt","_this3","plants","plant","toUpper","index_esm","_this4","posts","post","title","content","userInfo","href","showUsers","showPlants","showPosts","showAdminForms","React","Component","Navbar","logoutRediect","authAction","setState","logoutRedirect","to","logout","ti_index_esm","react_router","getNavbar","Message","_this","setTimeout","cleanMsg","bs_index_esm","msg","showMsg","Parallax","useEffect","elements","document","querySelectorAll","M","init","ri_index_esm","Homepage","filteredPlants","Object","toConsumableArray","allPlants","placeholder","onChange","event","filterPlants","by","value","target","toLowerCase","filter","includes","objectSpread","key","image","components_Parallax_Parallax","getFilterButtons","getSearchBar","getPlants","PlantDetails","match","params","toLikeNotLogged","redirectToAdmin","_event$target","name","defineProperty","action","adminAction","selectedPlantId","addFavoritePlant","likeToFavorites","md_index_esm","length","showPlantDetails","Blog","reverse","getPosts","Store","storeItems","filteredStoreItems","filterStoreItems","filteredItems","getStoreItems","Profile","removeFavoritePlant","gi_index_esm","getFavoritePlants","StoreItem","quantity","toCartLoggedStatus","undefined","editStateFromStoreItems","showSelected","min","handleInput","addToCart","ShoppingCart","item","deleteFromCart","lenght","getCartItems","CheckoutForm","_useState","useState","_useState2","slicedToArray","succeeded","setSucceeded","_useState3","_useState4","error","setError","_useState5","_useState6","processing","setProcessing","_useState7","_useState8","disabled","setDisabled","_useState9","_useState10","clientSecret","setClientSecret","stripe","useStripe","useElements","window","fetch","process","method","headers","Content-Type","body","JSON","stringify","then","res","json","data","handleChange","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","empty","message","stop","_x","apply","arguments","handleSubmit","_ref2","_callee2","ev","payload","_context2","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","sent","updateState","_x2","id","onSubmit","react_stripe_umd","options","style","base","color","fontFamily","fontSmoothing","fontSize","::placeholder","invalid","iconColor","role","Login","login","htmlFor","getLoginForm","Signup","successSignup","signup","showSignup","redirectToLogin","DeleteUser","modal","split","deleteUser","getDeleteUserForm","NewPlant","form","stateCopy","createPlant","getNewPlantForm","EditPlant","editPlant","property","join","swapCheckbox","checked","getEditPlantForm","DeletePlant","deletePlant","getDeletePlantForm","NewPost","url","axios","withCredentials","result","addMsg","catch","err","console","log","colSpan","getNewPostForm","EditPost","editPost","getEditPostForm","DeletePost","deletePost","getDeletePostForm","ModalComponent","promise","loadStripe","react_responsive_modal_esm","open","modalOpened","onClose","components_Login_Login","components_Signup_Signup","components_DeleteUser_DeleteUser","components_NewPlant_NewPlant","components_EditPlant_EditPlant","components_DeletePlant_DeletePlant","components_NewPost_NewPost","components_EditPost_EditPost","components_DeletePost_DeletePost","assign","showModal","Footer","vsc_index_esm","gr_index_esm","App","mod","_this5","_this6","_this7","plantId","_this8","_this9","components_Navbar_Navbar","components_Message_Message","Modal_Modal","editStateFromNewPost","path","exact","component","main_default","theme","components_Homepage_Homepage","routeProps","components_PlantDetails_PlantDetails","components_Blog_Blog","components_Store_Store","components_StoreItem","components_Admin_Admin","components_Profile_Profile","components_ShoppingCart","deleteCartItem","components_Footer_Footer"],"mappings":"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","file":"static/js/3.ecfc3484.chunk.js","sourcesContent":["import './Admin.scss'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { BiBasket } from \"react-icons/bi\";\r\n\r\nclass Admin extends React.Component {\r\n  state = {\r\n    user: {\r\n      _id: '',\r\n      username: '',\r\n      password: '',\r\n      admin: false,\r\n      favoritePlants: [],\r\n      cart: [],\r\n      totalPrice: 0,\r\n    },\r\n    newPlant: {\r\n      commonName: '',\r\n      botanicalName: '',\r\n      type: [],\r\n      maintenance: [],\r\n      water: [],\r\n      exposure: [],\r\n      safety: '',\r\n      purifying: false,\r\n      about: '',\r\n      price: 0,\r\n      stock: 0,\r\n      inStore: false,\r\n    },\r\n    newPost: {},\r\n    adminPermissions: false,\r\n  }\r\n\r\n  toUpper(word) {\r\n    if (word) return word[0].toUpperCase() + word.slice(1)\r\n  }\r\n\r\n  showUsers() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h2>List of users</h2>\r\n        <button onClick={()=>this.props.modalAction('open', 'signup')}>New user</button>\r\n        <table>\r\n          <tbody>\r\n            {this.props.users.map((user, index) => {\r\n              return (\r\n                <tr>\r\n                  <td>{user.username}</td>\r\n                  <div className=\"table-btns\">\r\n                    <Link className=\"link\" onClick={()=>this.props.modalAction('open', `delete-user/${user._id}`)}>\r\n                      <img src=\"/icons/delete-icon.png\" alt=\"delete-icon\"/>\r\n                    </Link>\r\n                  </div>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  showPlants() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h2>List of plants</h2>\r\n        <button onClick={()=>this.props.modalAction('open', 'new-plant')}>New plant</button>\r\n        <table>\r\n          <tbody>\r\n            {this.props.plants.map((plant, index) => {\r\n              return (\r\n                <tr>\r\n                  <td>\r\n                    {this.toUpper(plant.commonName)}{' '}\r\n                    {plant.inStore ? <BiBasket/> : null}\r\n                  </td>\r\n                  <div className=\"table-btns\">\r\n                    <Link className=\"link\" onClick={()=>this.props.modalAction('open', `edit-plant/${plant._id}`)}>\r\n                      <img src=\"/icons/edit-icon.png\" alt=\"edit-icon\"/>\r\n                    </Link>\r\n                  </div>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  showPosts() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h2>List of Posts</h2>\r\n        <button onClick={() => this.props.modalAction('open', 'new-post')}>New post</button>\r\n        <table>\r\n          <tbody>\r\n            {this.props.posts.map((post, index) => {\r\n              return (\r\n                <tr>\r\n                  <td>{this.toUpper(post.title)}</td>\r\n                  <td>{this.toUpper(post.content)}</td>\r\n                  <div className=\"table-btns\">\r\n                    <Link className=\"link\" onClick={()=>this.props.modalAction('open', `edit-post/${post._id}`)}>\r\n                      <img src=\"/icons/edit-icon.png\" alt=\"edit-icon\"/>\r\n                    </Link>\r\n                  </div>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  showAdminForms(){\r\n    if (this.props.userInfo){\r\n      if (this.props.userInfo.admin){\r\n        return(\r\n          <div>\r\n            <a className=\"link\" href={`https://dashboard.stripe.com/test/payments`}>Stripe dashboard</a>\r\n            {this.showUsers()}\r\n            {this.showPlants()}\r\n            {this.showPosts()}\r\n          </div>\r\n        )\r\n      } else {\r\n        return  <h1>Admin user required </h1>\r\n      }\r\n    } else {\r\n      return <h1>Login required </h1>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Admin\">\r\n        {this.showAdminForms()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// (<a className=\"link\" href={`https://dashboard.stripe.com/test/payments`}>Stripe dashboard</a>\r\nexport default Admin\r\n","import './Navbar.scss'\r\nimport React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { TiShoppingCart } from 'react-icons/ti'\r\nclass Navbar extends React.Component {\r\n  \r\n  state = {\r\n    logoutRediect: false\r\n  }\r\n\r\n  logout(){\r\n    this.props.authAction(null, 'logout')\r\n    this.setState({logoutRedirect: true})\r\n  }\r\n\r\n  getNavbar() {\r\n    if (this.props.userInfo) {\r\n      if (this.props.userInfo.admin) {\r\n        return (\r\n          <div className=\"navbar-child\">\r\n            <div className=\"nav-left\">\r\n              <Link className=\"link\" to=\"/\">\r\n                {/* <div className=\"nav-btn\">Home</div> */}\r\n                <img className=\"applant-logo nav-btn\" src=\"https://i.ibb.co/CKL8bY6/logo-applant.png\" alt=\"home-logo\" />\r\n              </Link>\r\n              <Link className=\"link\" to=\"/blog\">\r\n                <div className=\"nav-btn\">Blog</div>\r\n              </Link>\r\n              <Link className=\"link\" to=\"/store\">\r\n                <div className=\"nav-btn\">Store</div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"nav-right\">\r\n              <Link className=\"link\" to=\"/admin\">\r\n                <div className=\"nav-btn\">Admin</div>\r\n              </Link>\r\n              <Link className=\"link\" to=\"/profile\">\r\n                <div className=\"nav-btn\">Profile</div>\r\n              </Link>\r\n              <Link className=\"link\" onClick={()=>this.logout()}>\r\n                  <div className=\"nav-btn\">Logout</div>\r\n              </Link>\r\n              <div className=\"nav-btn cart-icon\">\r\n                <Link className=\"link\" to=\"/shopping-cart\">\r\n                  <TiShoppingCart/> \r\n                </Link>\r\n              </div>\r\n            </div>\r\n            {this.state.logoutRedirect ? <Redirect to=\"/\"/> : null}\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"navbar-child\">\r\n            <div className=\"nav-left\">\r\n              <Link className=\"link\" to=\"/\">\r\n               {/*  <div className=\"nav-btn\">Home</div> */}\r\n               <img className=\"applant-logo nav-btn\" src=\"https://i.ibb.co/CKL8bY6/logo-applant.png\" alt=\"home-logo\" />\r\n              </Link>\r\n              <Link className=\"link\" to=\"/blog\">\r\n                <div className=\"nav-btn\">Blog</div>\r\n              </Link>\r\n              <Link className=\"link\" to=\"/store\">\r\n                <div className=\"nav-btn\">Store</div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"nav-right\">\r\n              <Link className=\"link\" to=\"/profile\">\r\n                <div className=\"nav-btn\">Profile</div>\r\n              </Link>\r\n              <Link className=\"link\" onClick={()=>this.logout()}>\r\n                <div className=\"nav-btn\">Logout</div>\r\n              </Link>\r\n              <div className=\"nav-btn cart-icon\">\r\n                <Link className=\"link\" to=\"/shopping-cart\">\r\n                   <TiShoppingCart/> \r\n                </Link>\r\n              </div>\r\n            </div>\r\n            {this.state.logoutRedirect ? <Redirect to=\"/\"/> : null}\r\n          </div>\r\n        )\r\n      }\r\n    } else {\r\n      return (\r\n        <div className=\"navbar-child\">\r\n          <div className=\"nav-left\">\r\n            <Link className=\"link\" to=\"/\">\r\n              {/* <div className=\"nav-btn\">Home</div> */}\r\n              <img className=\"applant-logo nav-btn\" src=\"https://i.ibb.co/CKL8bY6/logo-applant.png\" alt=\"home-logo\" />\r\n            </Link>\r\n            <Link className=\"link\" to=\"/blog\">\r\n              <div className=\"nav-btn\">Blog</div>\r\n            </Link>\r\n            <Link className=\"link\" to=\"/store\">\r\n              <div className=\"nav-btn\">Store</div>\r\n            </Link>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <Link className=\"link\" onClick={()=>this.props.modalAction('open', 'login')}>\r\n              <div className=\"nav-btn\">Login</div>\r\n            </Link>\r\n          </div>\r\n          {this.state.logoutRedirect ? this.setState({logoutRedirect: false}) : null}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  /*{ <Link className=\"link\" to=\"/signup\">Sign up | </Link> }*/\r\n  render() {\r\n    return <nav className=\"Navbar\">{this.getNavbar()}</nav>\r\n  }\r\n}\r\n\r\nexport default Navbar\r\n","import './Message.scss'\r\nimport React from 'react'\r\n\r\nimport {BsFillInfoCircleFill} from 'react-icons/bs'\r\n\r\nclass Message extends React.Component {\r\n  showMsg() {\r\n    setTimeout(() => {\r\n      this.props.cleanMsg()\r\n    }, 2000)\r\n    return <div className=\"message-container\"><BsFillInfoCircleFill/><article>{this.props.msg}</article></div>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Message\">\r\n        {this.props.msg ? this.showMsg() : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Message\r\n","import React, { useEffect } from 'react'\r\nimport M from 'materialize-css'\r\nimport './Parallax.scss'\r\n\r\nimport { RiPlantFill } from \"react-icons/ri\";\r\n\r\nconst Parallax = () => {\r\n  useEffect(() => {\r\n    let elements = document.querySelectorAll('.parallax')\r\n    M.Parallax.init(elements)\r\n  }, [])\r\n  return (\r\n    <div className=\"Parallax\">\r\n      <div className=\"container\">\r\n        <div className=\"parallax-container\">\r\n          <div className=\"parallax\">\r\n            <img\r\n              src=\"https://i.ibb.co/sC3ZQcK/Parallax3.jpg\"\r\n              alt=\"background-img\"\r\n            />\r\n          </div>\r\n          <div className=\"section white\">\r\n            <h2><RiPlantFill/> Plants made easy <RiPlantFill/></h2>\r\n            <p>\"You can’t buy happiness, but you can buy plants, and that’s pretty much the same thing.\"</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"parallax-container\">\r\n          <div className=\"parallax\">\r\n            <img\r\n              src=\"https://i.ibb.co/xSd2qvK/Parallax1.jpg\"\r\n              alt=\"background-img\"\r\n            />\r\n          </div>\r\n          <div className=\"section white\">\r\n            <h2><RiPlantFill/> APPLANT <RiPlantFill/></h2>\r\n            <p>helps you find the plant that fits your spaces best</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Parallax\r\n","import './Homepage.scss'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Parallax from '../Parallax/Parallax'\r\n\r\nclass Homepage extends React.Component {\r\n  state = {\r\n    filteredPlants: [...this.props.allPlants],\r\n  }\r\n\r\n  getSearchBar() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search plant by name\"\r\n        onChange={(event) => this.filterPlants(event, 'commonName')}\r\n      />\r\n    )\r\n  }\r\n\r\n  getFilterButtons() {\r\n    return (\r\n      <div className=\"filter-buttons\">\r\n        <button onClick={() => this.filterPlants()}>All</button>\r\n        <button onClick={() => this.filterPlants(null, 'type', 'indoors')}>\r\n          Indoors\r\n        </button>\r\n        <button onClick={() => this.filterPlants(null, 'type', 'outdoors')}>\r\n          Outdoors\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  filterPlants(event, by, type) {\r\n    let filteredPlants, value\r\n    if (by === 'commonName') {\r\n      value = event.target.value.toLowerCase()\r\n      filteredPlants = this.props.allPlants.filter((plant) =>\r\n        plant[by].includes(value)\r\n      )\r\n    } else if (by === 'type') {\r\n      filteredPlants = this.props.allPlants.filter((plant) =>\r\n        plant.type.includes(type)\r\n      )\r\n    } else {\r\n      filteredPlants = this.props.allPlants\r\n    }\r\n    this.setState({ ...this.state, filteredPlants: filteredPlants })\r\n  }\r\n\r\n  getPlants() {\r\n    const plants = this.state.filteredPlants\r\n    return plants.map((plant, index) => {\r\n      return (\r\n        <div key={index} className=\"plant-card\">\r\n          <Link className=\"link\" to={`/plant-details/${plant._id}`}>\r\n            <img src={plant.image} alt={plant.commonName} />\r\n          </Link>\r\n          <h2>\r\n            {plant.commonName[0].toUpperCase() + plant.commonName.slice(1)}\r\n          </h2>\r\n          <h3>\r\n            (\r\n            {plant.botanicalName[0].toUpperCase() +\r\n              plant.botanicalName.slice(1)}\r\n            )\r\n          </h3>\r\n          <Link className=\"link\" to={`/plant-details/${plant._id}`}>\r\n            <div className=\"seeDetails\">\r\n                <p>See details</p>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Homepage\">\r\n          <Parallax />\r\n        {this.getFilterButtons()}\r\n        {this.getSearchBar()}\r\n        <div className=\"plant-cards-container\">\r\n          {this.getPlants()}\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Homepage\r\n","import './PlantDetails.scss'\r\nimport React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { MdFavoriteBorder } from 'react-icons/md'\r\nimport { MdAddShoppingCart } from 'react-icons/md'\r\n\r\nclass PlantDetails extends React.Component {\r\n  state = {\r\n    plant: {\r\n                  ...this.props.allPlants.filter(\r\n        (plant) => this.props.match.params._id === plant._id\r\n      )[0],\r\n    },\r\n    toLikeNotLogged: false,\r\n    redirectToAdmin: false,\r\n  }\r\n\r\n  toUpper(word) {\r\n    return word[0].toUpperCase() + word.slice(1)\r\n  }\r\n\r\n  handleInput(event) {\r\n    const { name, value } = event.target\r\n    this.setState({\r\n      ...this.state,\r\n      plant: { ...this.state.plant, [name]: value },\r\n    })\r\n  }\r\n\r\n  adminAction(action) {\r\n    if (action === 'edit') {\r\n      this.props.adminAction(\r\n        this.state.plant,\r\n        `edit-plant/${this.state.plant._id}`\r\n      )\r\n    } else if (action === 'delete') {\r\n      this.props.adminAction(null, `delete-plant/${this.state.plant._id}`)\r\n      this.setState({ ...this.state, redirectToAdmin: true })\r\n    }\r\n  }\r\n\r\n  likeToFavorites() {\r\n    const selectedPlantId = this.props.match.params._id\r\n    if (this.props.userInfo) {\r\n      this.props.addFavoritePlant(selectedPlantId)\r\n    } else {\r\n      this.props.modalAction('open', 'login')\r\n    }\r\n  }\r\n\r\n  showPlantDetails() {\r\n    if (this.state.redirectToAdmin) {\r\n      return <Redirect to=\"/admin\" />\r\n    }\r\n    return (\r\n      <div  className=\"PlantDetails\" >\r\n      <div className=\"PlantDetailsUp\">\r\n        <div className=\"image\">\r\n          <img\r\n            src={this.state.plant.image}\r\n            alt={this.state.plant.commonName}\r\n          />\r\n        </div>\r\n        <div className=\"infoPlantDetails\">\r\n        <div className=\"buttons\">\r\n          <button className=\"link-btn\" onClick={() => this.likeToFavorites()}>\r\n          <MdFavoriteBorder />\r\n          </button>\r\n          <Link\r\n            \r\n            to={`/store-items/${this.props.match.params._id}`}\r\n          >\r\n             <button className=\"link-btn\"><MdAddShoppingCart /> </button> \r\n          </Link>\r\n          </div>\r\n          <div>\r\n          <h2>{this.toUpper(this.state.plant.commonName)}</h2>\r\n          <i>\r\n            <h3>{this.toUpper(this.state.plant.botanicalName)}</h3>\r\n          </i>\r\n\r\n          <p>\r\n            <b>Maintenance:</b> {this.toUpper(this.state.plant.maintenance)}\r\n          </p>\r\n\r\n          <p>\r\n            <b>Watering:</b> {this.toUpper(this.state.plant.water)}\r\n          </p>\r\n\r\n          <p>\r\n            <b>Type:</b>{' '}\r\n            {this.state.plant.type.map((type) => {\r\n              return `${this.toUpper(type)} `\r\n            })}\r\n          </p>\r\n\r\n          <p>\r\n            <b>Exposure: </b>\r\n            {this.state.plant.exposure.map((exposure) =>\r\n              this.toUpper(exposure+\" \")\r\n            )}\r\n          </p>\r\n\r\n          <p>\r\n            <b>Air purifying:</b> {this.state.plant.purifying ? 'Yes' : 'No'}\r\n          </p>\r\n\r\n          <p>\r\n            <b>Pet/baby safe:</b> {this.state.plant.safety}\r\n          </p>\r\n          </div>\r\n          </div>\r\n        </div>\r\n          <div className='About'>\r\n          <h3>\r\n            <b>About {this.toUpper(this.state.plant.commonName)}</b>\r\n          </h3>\r\n          <p>{this.state.plant.about}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return this.props.allPlants.length ? (\r\n      <div className=\"PlantDetails\">\r\n        {this.showPlantDetails()}\r\n      </div>\r\n    ):( \r\n      <div className=\"spinner\">\r\n        <div className=\"lds-ripple\">\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\nexport default PlantDetails\r\n","import './Blog.scss'\r\nimport React from 'react'\r\n\r\nclass Blog extends React.Component {\r\n\r\n  getPosts() {\r\n    return (\r\n      <div className=\"post-container\">\r\n        {this.props.userInfo ? (\r\n          this.props.userInfo.admin ? (\r\n            <div>\r\n              <button\r\n                onClick={() => this.props.modalAction('open', 'new-post')}\r\n              >\r\n                New post\r\n              </button>\r\n            </div>\r\n          ) : null\r\n        ) : null}\r\n        {this.props.posts.reverse().map((post) => {\r\n          return (\r\n            <div className=\"post\">\r\n                      <div>\r\n                        <img src={post.image} alt=\"post-img\" />\r\n                      </div>\r\n                      <div className=\"post-content\">\r\n                        <h2>{post.title}</h2>\r\n                        <p>{post.content}</p>\r\n                      </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"Blog\">{this.getPosts()}</div>\r\n  }\r\n}\r\nexport default Blog\r\n","import './Store.scss'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Store extends React.Component {\r\n  state = {\r\n    storeItems: this.props.allPlants.filter((plant)=>{\r\n      return plant.inStore\r\n    }),\r\n    filteredStoreItems: this.props.allPlants.filter((plant)=>{\r\n      return plant.inStore\r\n    }),\r\n  }\r\n\r\n  getSearchBar() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search plant\"\r\n        onChange={(event) => this.filterStoreItems(event, 'commonName')}\r\n      />\r\n    )\r\n  }\r\n\r\n  getFilterButtons() {\r\n    return (\r\n      <div className=\"filter-buttons\">\r\n        <button onClick={() => this.filterStoreItems()}>All</button>\r\n        <button onClick={() => this.filterStoreItems(null, 'type', 'indoors')}>\r\n          Indoors\r\n        </button>\r\n        <button onClick={() => this.filterStoreItems(null, 'type', 'outdoors')}>\r\n          Outdoors\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  filterStoreItems(event, by, type) {\r\n    let filteredItems, value\r\n    if (by === 'commonName') {\r\n      value = event.target.value.toLowerCase()\r\n      filteredItems = this.state.storeItems.filter((plant) => {\r\n        return plant[by].includes(value)\r\n      })\r\n    } else if (by === 'type') {\r\n      filteredItems = this.state.storeItems.filter((plant) => {\r\n        return plant[by].includes(type)\r\n      })\r\n    } else {\r\n      filteredItems = this.state.storeItems\r\n    }\r\n    this.setState({ ...this.state, filteredStoreItems: filteredItems })\r\n  }\r\n\r\n  getStoreItems() {\r\n    const storeItems = this.state.filteredStoreItems\r\n    return storeItems.map((plant, index) => {\r\n\r\n      return (\r\n        <div key={index} className=\"plant-card\">\r\n          <Link className=\"link\" to={`/store-items/${plant._id}`}>\r\n            <img src={plant.image} alt={plant.commonName} />\r\n          </Link>\r\n          <h2>\r\n            {plant.commonName[0].toUpperCase() + plant.commonName.slice(1)}\r\n          </h2>\r\n          <h3>\r\n            (\r\n            {plant.botanicalName[0].toUpperCase() +\r\n              plant.botanicalName.slice(1)}\r\n            )\r\n          </h3>\r\n          <p><b>PVP</b> {plant.price}€</p>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Homepage\">\r\n        <h1 className=\"main-title\">Store</h1>\r\n        {this.getFilterButtons()}\r\n        {this.getSearchBar()}\r\n        <div className=\"plant-cards-container\">{this.getStoreItems()}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Store\r\n","import './Profile.scss'\r\nimport React from 'react'\r\nimport { GiFlowerPot } from 'react-icons/gi'\r\n\r\nclass Profile extends React.Component {\r\n  toUpper(word) {\r\n    if (word) return word[0].toUpperCase() + word.slice(1)\r\n  }\r\n\r\n  getFavoritePlants() {\r\n    const { favoritePlants } = this.props.userInfo\r\n    if (favoritePlants.length > 0) {\r\n      return favoritePlants.map((plant, index) => {\r\n        return (\r\n          <div key={index} className=\"Profile\">\r\n            <div className=\"ProfileUp\">\r\n              <div className=\"img\">\r\n                <img src={plant.image} alt={plant.commonName} />\r\n              </div>\r\n              <div className=\"Details\">\r\n                <h2>{this.toUpper(plant.commonName)}</h2>\r\n                <h3>({this.toUpper(plant.botanicalName)})</h3>\r\n                <p>\r\n                  <b>Maintenance:</b> {this.toUpper(plant.maintenance)}\r\n                </p>\r\n                <p>\r\n                  <b>Watering:</b> {this.toUpper(plant.water)}\r\n                </p>\r\n                <p>\r\n                  <b>Type: </b>\r\n                    {plant.type ? plant.type.map((type) => {return `${this.toUpper(type)} `}) : null}\r\n                </p>\r\n                <p>\r\n                <b>Exposure: </b>\r\n                {plant.exposure? plant.exposure.map((exposure) => this.toUpper(exposure) +\" \" ):null}\r\n                </p>\r\n                <p>\r\n                  <b>Air purifying:</b> {plant.purifying ? 'Yes' : 'No'}\r\n                </p>\r\n                <p>\r\n                  <b>Pet/baby safe:</b> {plant.safety}\r\n                </p>\r\n                <button className=\"link-btn\" onClick={() => this.props.removeFavoritePlant(plant._id)}>\r\n                  Delete\r\n                </button> \r\n              </div>\r\n            </div>\r\n          <div className=\"ProfileDown\">\r\n            <h3>\r\n              <b>About {this.toUpper(plant.commonName)}</b>\r\n            </h3>\r\n            <p>{plant.about}</p>\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.props.userInfo ? \r\n        <div className=\"Profile\">\r\n          <h1>{`${this.toUpper(this.props.userInfo.username)}'s profile`}</h1>\r\n          <p className=\"p\">Your favorite plants <GiFlowerPot /></p>\r\n          \r\n          <div >{this.getFavoritePlants()}</div>\r\n        </div>\r\n      : <h1>Login required</h1>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nclass StoreItem extends React.Component {\r\n  state = {\r\n    selectedPlantId: [],\r\n    quantity: 0,\r\n    totalPrice: 0, \r\n    toCartLoggedStatus: undefined,\r\n  }\r\n\r\n  handleInput(event) {\r\n    const selectedPlantId = this.props.match.params._id\r\n    const quantity = event.target.value\r\n    if (this.props.userInfo) {\r\n      this.setState({ ...this.state, selectedPlantId, quantity })\r\n    }\r\n  }\r\n\r\n  addToCart() {\r\n    if (this.props.userInfo) {\r\n      this.props.editStateFromStoreItems(this.state.selectedPlantId, this.state.quantity)\r\n      this.setState({ ...this.state, toCartLoggedStatus: 'logged' })\r\n    } else {\r\n      this.setState({ ...this.state, toCartLoggedStatus: 'not logged' })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const selectedPlantId = this.props.match.params._id\r\n    const showSelected = this.props.plants.filter((plant) => {\r\n      return selectedPlantId === plant._id\r\n    })[0]\r\n    return this.props.plants.length ? (\r\n      <div className=\"StoreItem\">\r\n        <div className=\"item\">\r\n          <img src={showSelected.image} alt={showSelected.commonName} />\r\n          <div className=\"item-info\">\r\n            <h2>\r\n              {showSelected.commonName[0].toUpperCase() +\r\n                showSelected.commonName.slice(1)}\r\n            </h2>\r\n            <p>\r\n              <i>\r\n                {showSelected.botanicalName[0].toUpperCase() +\r\n                  showSelected.botanicalName.slice(1)}\r\n              </i>\r\n            </p>\r\n            <strong>\r\n              <p>{showSelected.price}€</p>\r\n            </strong>\r\n\r\n            <input\r\n              className=\"input\"\r\n              type=\"number\"\r\n              placeholder=\"Quantity\"\r\n              min=\"0\"\r\n              name=\"quantity\"\r\n              onChange={(event) => this.handleInput(event)}\r\n            />\r\n            <button onClick={() => this.addToCart()}>Add to cart</button>\r\n\r\n            <Link className=\"link\" to={`/plant-details/${selectedPlantId}`}>View details</Link>\r\n          </div>\r\n        </div>\r\n        {this.state.toCartLoggedStatus === 'not logged' ? (\r\n          this.props.modalAction('open', 'login')\r\n        ) : null}\r\n        {this.state.toCartLoggedStatus === 'logged' ? (\r\n          <Redirect to=\"/shopping-cart\" />\r\n        ) : null}\r\n      </div>\r\n    ) : (\r\n      <div className=\"spinner-2\">\r\n        <div className=\"lds-ripple\">\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StoreItem\r\n","import React from 'react'\r\n\r\nimport { RiDeleteBinLine } from 'react-icons/ri'\r\n\r\nclass ShoppingCart extends React.Component {\r\n\r\n  toUpper(word) {\r\n    if (word) return word[0].toUpperCase() + word.slice(1)\r\n  }\r\n  getCartItems() {\r\n    const { cart } = this.props.userInfo\r\n    if (cart) {\r\n      return cart.map((item, index) => {\r\n        return (\r\n          <div key={index} className=\"allItemsCart\">\r\n            <img src={item.plant.image} alt={item.plant.commonName} />\r\n            <div className=\"infoItemCart\">\r\n              <b>\r\n                <p>{this.toUpper(item.plant.commonName)}</p>\r\n              </b>\r\n              <p>\r\n                <b>Qty:</b> {item.quantity}\r\n              </p>\r\n              <p>\r\n                <b>Price:</b> {item.plant.price}€\r\n              </p>\r\n              <p>\r\n                <b>Total: </b>\r\n                {item.quantity * item.plant.price}€\r\n              </p>\r\n              <button onClick={() => this.props.deleteFromCart(item.plant._id)}>\r\n                <RiDeleteBinLine className=\"removeIcon\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      this.props.userInfo ? \r\n        (this.props.userInfo.cart.lenght === 0 ?\r\n          <h1>Your cart it's empty </h1>\r\n          :\r\n          <div className=\"cart\">\r\n            <h1>Cart</h1>\r\n          <div className=\"ShoppingCart\" >\r\n            <div className=\"ItemsCart\" > \r\n                {this.getCartItems()}\r\n            </div>\r\n            <div className=\"total-price\">\r\n              <p>\r\n                <b>Total: </b> {this.props.userInfo.totalPrice} €\r\n              </p>\r\n              <button onClick={()=>{this.props.modalAction('open', 'payment')}}>Check out</button>\r\n            </div> \r\n          </div>\r\n          </div>\r\n        ) \r\n      : (<h1>Login required </h1>)\r\n    )\r\n  }\r\n}\r\n\r\nexport default ShoppingCart\r\n","import React, { useState, useEffect } from 'react'\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\r\n\r\nexport default function CheckoutForm(props) {\r\n  const [succeeded, setSucceeded] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [processing, setProcessing] = useState('')\r\n  const [disabled, setDisabled] = useState(true)\r\n  const [clientSecret, setClientSecret] = useState('')\r\n  const stripe = useStripe()\r\n  const elements = useElements()\r\n\r\n  useEffect(() => {\r\n    // Create PaymentIntent as soon as the page loads\r\n    window\r\n      .fetch(`${process.env.REACT_APP_URL}/app/create-payment-intent`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(props.userInfo),\r\n      })\r\n      .then((res) => {\r\n        return res.json()\r\n      })\r\n      .then((data) => {\r\n        setClientSecret(data.clientSecret)\r\n      })\r\n  }, [])\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: '#32325d',\r\n        fontFamily: 'Arial, sans-serif',\r\n        fontSmoothing: 'antialiased',\r\n        fontSize: '16px',\r\n        '::placeholder': {\r\n          color: '#32325d',\r\n        },\r\n      },\r\n      invalid: {\r\n        color: '#fa755a',\r\n        iconColor: '#fa755a',\r\n      },\r\n    },\r\n  }\r\n\r\n  const handleChange = async (event) => {\r\n    // Listen for changes in the CardElement\r\n    // and display any errors as the customer types their card details\r\n    setDisabled(event.empty)\r\n    setError(event.error ? event.error.message : '')\r\n  }\r\n\r\n  const handleSubmit = async (ev) => {\r\n    ev.preventDefault()\r\n    setProcessing(true)\r\n    const payload = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n      },\r\n    })\r\n    if (payload.error) {\r\n      setError(`Payment failed ${payload.error.message}`)\r\n      setProcessing(false)\r\n    } else {\r\n      setError(null)\r\n      setProcessing(false)\r\n      setSucceeded(true)\r\n    }\r\n    props.updateState('user')\r\n  }\r\n  return (\r\n    <div className=\"CheckoutForm\">\r\n      <form className=\"stripeForm\" id=\"payment-form\" onSubmit={handleSubmit}>\r\n        <CardElement\r\n          id=\"card-element\"\r\n          options={cardStyle}\r\n          onChange={handleChange}\r\n        />\r\n        <button disabled={processing || disabled || succeeded} id=\"submit\">\r\n          <span id=\"button-text\">\r\n            {processing ? (\r\n              <div className=\"spinner\" id=\"spinner\"></div>\r\n            ) : (\r\n              'Pay now'\r\n            )}\r\n          </span>\r\n        </button>\r\n        {/* Show any error that happens when processing the payment */}\r\n        {error && (\r\n          <div className=\"card-error\" role=\"alert\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        {/* Show a success message upon completion */}\r\n        <p className={succeeded ? 'result-message' : 'result-message hidden'}>\r\n          Payment succeeded\r\n        </p>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import './Login.scss'\r\nimport React from 'react'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    user: {\r\n      username: '',\r\n      password: '',\r\n    },\r\n  }\r\n\r\n  login(event){\r\n    event.preventDefault()\r\n    this.props.authAction(this.state.user, 'login')\r\n    this.props.modalAction('close')\r\n  }\r\n\r\n  handleInput(event) {\r\n    const { name, value } = event.target\r\n    this.setState({\r\n      ...this.state,\r\n      user: { ...this.state.user, [name]: value },\r\n    })\r\n  }\r\n\r\n  getLoginForm() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h2>Login</h2>\r\n        <form onSubmit={(event) => this.login(event)}>\r\n          <div>\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              onChange={(event) => this.handleInput(event)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={(event) => this.handleInput(event)}\r\n            />\r\n          </div>\r\n          <button className=\"login-button\">Log in</button> \r\n        </form>\r\n        <p>\r\n          Don't you have an account yet? Register by clicking<span> </span>\r\n          <Link onClick={()=>this.props.modalAction('open', 'signup')}>here</Link>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        {this.getLoginForm()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login\r\n","import './Signup.scss'\r\nimport React from 'react'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Signup extends React.Component {\r\n  state = {\r\n    user: {\r\n      username: ``,\r\n      password: ``,\r\n    },\r\n    successSignup: false,\r\n  }\r\n\r\n  signup(event){\r\n    this.setState({successSignup: true})\r\n    event.preventDefault()\r\n    this.props.authAction(this.state.user, 'signup')\r\n    this.props.modalAction('close')\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { value, name } = event.target\r\n    this.setState({\r\n      ...this.state,\r\n      user: { ...this.state.user, [name]: value },\r\n    })\r\n  }\r\n\r\n  redirectToLogin(){\r\n    this.props.modalAction('open', 'login')\r\n    this.setState({successSignup: false})\r\n  }\r\n\r\n  showSignup() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h2>Sign up</h2>\r\n        <form onSubmit={(event) => this.signup(event)}>\r\n          <div className=\"form-field\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              onChange={(event) => this.handleChange(event)}\r\n            />\r\n          </div>\r\n          <div className=\"form-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={(event) => this.handleChange(event)}\r\n            />\r\n          </div>\r\n          <button>Register new user</button>\r\n        </form>\r\n        <p>\r\n          Do you have an account? Log in<span> </span>\r\n          <Link onClick={()=>this.props.modalAction('open', 'login')}>here</Link>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Signup\">\r\n        {this.showSignup()}\r\n        {this.state.successSignup ? this.redirectToLogin() : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Signup\r\n","import './DeleteUser.scss'\r\nimport React from 'react'\r\n\r\nclass DeleteUser extends React.Component {\r\n\r\n  state = {\r\n    user: this.props.users.filter((user)=>{\r\n      return this.props.modal.split('/')[1] === user._id\r\n    })[0]\r\n  }\r\n\r\n  deleteUser(){\r\n    this.props.adminAction(null, `delete-user/${this.state.user._id}`)\r\n    this.props.modalAction('close')\r\n  }\r\n\r\n  getDeleteUserForm() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h2>Delete user</h2>\r\n        <h3>Are you sure you want to delete the user <i>{this.state.user.username}</i>?</h3>\r\n        <button onClick={()=>this.deleteUser()}>DELETE</button>\r\n        <button onClick={()=>this.props.modalAction('close')}>Cancel</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"DeleteUser\">\r\n        {this.getDeleteUserForm()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DeleteUser\r\n","import './NewPlant.scss'\r\nimport React from 'react'\r\n\r\nclass NewPlant extends React.Component {\r\n\r\n  state = {\r\n    newPlant: {}\r\n  }\r\n\r\n  createPlant(event){\r\n    event.preventDefault()\r\n    this.props.adminAction(this.state.newPlant, 'new-plant')\r\n    this.props.updateState('plants')\r\n    this.props.modalAction('close')\r\n}\r\n\r\n  handleInput(event, form) {\r\n    const stateCopy = { ...this.state }\r\n    const { name, value } = event.target\r\n    if (name === 'type') {\r\n        stateCopy[form][name] =\r\n        value === 'all' ? ['indoors', 'outdoors'] : value.split(' ')\r\n    } else if (name === 'exposure') {\r\n        stateCopy[form][name] =\r\n      value === 'all' ? ['low', 'medium', 'high'] : value.split(' ')\r\n    } else if (name === 'purifying' || name === 'inStore') {\r\n        stateCopy[form][name] = value ? true : false\r\n    } else {\r\n        stateCopy[form][name] = value\r\n    }\r\n    this.setState(stateCopy)\r\n  }\r\n\r\n  getNewPlantForm() {\r\n    return (\r\n        <div className=\"PlantDetails\">\r\n            <form\r\n            className=\"form\"\r\n            onSubmit={(event) => this.createPlant(event)}\r\n            >\r\n                <h2>New plant</h2>\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>Image URL</td>\r\n                        <td>\r\n                        <input\r\n                            onChange={(event) => this.handleInput(event, 'newPlant')}\r\n                            type=\"text\"\r\n                            name=\"image\"\r\n                        />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Common name</td>\r\n                        <td>\r\n                        <input\r\n                            onChange={(event) => this.handleInput(event, 'newPlant')}\r\n                            type=\"text\"\r\n                            name=\"commonName\"\r\n                        />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Botanical name</td>\r\n                        <td>\r\n                        <input\r\n                            onChange={(event) => this.handleInput(event, 'newPlant')}\r\n                            type=\"text\"\r\n                            name=\"botanicalName\"\r\n                        />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Type</td>\r\n                        <td>\r\n                        <input\r\n                            onChange={(event) => this.handleInput(event, 'newPlant')}\r\n                            type=\"text\"\r\n                            name=\"type\"\r\n                        />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Maintenance</td>\r\n                        <td>\r\n                        <input\r\n                            onChange={(event) => this.handleInput(event, 'newPlant')}\r\n                            type=\"text\"\r\n                            name=\"maintenance\"\r\n                        />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Water</td>\r\n                        <td>\r\n                        <input\r\n                            onChange={(event) => this.handleInput(event, 'newPlant')}\r\n                            type=\"text\"\r\n                            name=\"water\"\r\n                        />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Exposure</td>\r\n                        <td>\r\n                        <input\r\n                            onChange={(event) => this.handleInput(event, 'newPlant')}\r\n                            type=\"text\"\r\n                            name=\"exposure\"\r\n                        />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Safety</td>\r\n                        <td>\r\n                        <input\r\n                            onChange={(event) => this.handleInput(event, 'newPlant')}\r\n                            type=\"text\"\r\n                            name=\"safety\"\r\n                        />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Purifying</td>\r\n                        <td>\r\n                            <input\r\n                            onChange={(event) => this.handleInput(event, 'newPlant')}\r\n                            type=\"checkbox\"\r\n                            name=\"purifying\"\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>About</td>\r\n                        <td>\r\n                            <textarea \r\n                            onChange={(event) => this.handleInput(event, 'newPlant')}\r\n                            name=\"about\"\r\n                            type=\"text\"/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Price</td>\r\n                        <td>\r\n                        <input\r\n                            onChange={(event) => this.handleInput(event, 'newPlant')}\r\n                            type=\"number\"\r\n                            name=\"price\"\r\n                        />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Stock</td>\r\n                        <td>\r\n                        <input\r\n                            onChange={(event) => this.handleInput(event, 'newPlant')}\r\n                            type=\"number\"\r\n                            name=\"stock\"\r\n                        />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>In store</td>\r\n                        <td>\r\n                            <input\r\n                            onChange={(event) => this.handleInput(event, 'newPlant')}\r\n                            type=\"checkbox\"\r\n                            name=\"inStore\"\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                <button>Create new plant</button>\r\n            </form>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"NewPlant\">\r\n        {this.getNewPlantForm()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NewPlant\r\n","import './EditPlant.scss'\r\nimport React from 'react'\r\n\r\nclass EditPlant extends React.Component {\r\n  \r\n  state = {\r\n    editPlant: this.props.plants.filter((plant)=>{\r\n      return this.props.modal.split('/')[1] === plant._id\r\n    })[0]\r\n  }\r\n\r\n  editPlant(event) {\r\n    event.preventDefault()\r\n    this.props.adminAction(this.state.editPlant, `edit-plant/${this.state.editPlant._id}`)\r\n    this.props.modalAction('close')\r\n  }\r\n\r\n  swapCheckbox(property){\r\n    const stateCopy = {...this.state}\r\n    stateCopy.editPlant[[property]] = !stateCopy.editPlant[[property]]\r\n    this.setState(stateCopy)\r\n  }\r\n\r\n  handleInput(event, form) {\r\n    const stateCopy = {...this.state}\r\n    let { name, value } = event.target\r\n    if (name === 'type'){\r\n      stateCopy[form][name] =\r\n      value === 'all' ? ['indoors, outdoors'] : value.split(' ')\r\n    } else if (name === 'exposure'){\r\n      stateCopy[form][name] = \r\n      value === 'all' ? ['low', 'medium', 'high'] : value.split(' ')\r\n    } else if (name === 'purifying' || name === 'inStore'){\r\n      return\r\n    } else {\r\n      stateCopy[form][name] = value\r\n    }\r\n    this.setState(stateCopy)\r\n  }\r\n\r\n  getEditPlantForm() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <form\r\n          className=\"form\"\r\n          onSubmit={(event) => this.editPlant(event)}\r\n        >\r\n          <h2>Edit plant</h2>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Image URL</td>\r\n                <td>\r\n                <input\r\n                    onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                    type=\"text\"\r\n                    name=\"image\"\r\n                    value={this.state.editPlant.image}\r\n                />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Common name</td>\r\n                <td>\r\n                <input\r\n                  onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                  type=\"text\"\r\n                  name=\"commonName\"\r\n                  value={this.state.editPlant.commonName}\r\n                />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Botanical name</td>\r\n                <td>\r\n                <input\r\n                  onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                  type=\"text\"\r\n                  name=\"botanicalName\"\r\n                  value={this.state.editPlant.botanicalName}\r\n                />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Type</td>\r\n                <td>\r\n                <input\r\n                  onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                  type=\"text\"\r\n                  name=\"type\"\r\n                  value={this.state.editPlant.type.join(' ')}\r\n                />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Maintenance</td>\r\n                <td>\r\n                <input\r\n                  onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                  type=\"text\"\r\n                  name=\"maintenance\"\r\n                  value={this.state.editPlant.maintenance}\r\n                />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Water</td>\r\n                <td>\r\n                <input\r\n                  onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                  type=\"text\"\r\n                  name=\"water\"\r\n                  value={this.state.editPlant.water}\r\n                />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Exposure</td>\r\n                <td>\r\n                <input\r\n                  onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                  type=\"text\"\r\n                  name=\"exposure\"\r\n                  value={this.state.editPlant.exposure.join(' ')}\r\n                />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Safety</td>\r\n                <td>\r\n                <input\r\n                  onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                  type=\"text\"\r\n                  name=\"safety\"\r\n                  value={this.state.editPlant.safety}\r\n                />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n              <td>Purifying</td>\r\n              <td>\r\n                {this.state.editPlant.purifying ?\r\n                <input onClick={()=>this.swapCheckbox('purifying')} onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                  type=\"checkbox\" name=\"purifying\" checked/>\r\n                : <input onClick={()=>this.swapCheckbox('purifying')} onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                type=\"checkbox\" name=\"purifying\"/>}\r\n              </td>\r\n              </tr>\r\n              <tr>\r\n                <td>About</td>\r\n                <td>\r\n                <textarea \r\n                onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                name=\"about\" \r\n                value={this.state.editPlant.about} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Price</td>\r\n                <td>\r\n                <input\r\n                  onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                  type=\"number\"\r\n                  name=\"price\"\r\n                  value={this.state.editPlant.price}\r\n                />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Stock</td>\r\n                <td>\r\n                <input\r\n                  onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                  type=\"number\"\r\n                  name=\"stock\"\r\n                  value={this.state.editPlant.stock}\r\n                />\r\n                </td>\r\n              </tr>\r\n                <td>On sale</td>\r\n                {this.state.editPlant.inStore ?\r\n                  <input onClick={()=>this.swapCheckbox('inStore')} onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                    type=\"checkbox\" name=\"inStore\" checked/>\r\n                  : <input onClick={()=>this.swapCheckbox('inStore')} onChange={(event) => this.handleInput(event, 'editPlant')}\r\n                  type=\"checkbox\" name=\"inStore\"/>}\r\n            </tbody>\r\n          </table>\r\n          <button>Edit plant</button>\r\n        </form>\r\n        <button onClick={()=>this.props.modalAction('open', `delete-plant/${this.state.editPlant._id}`)}>Delete plant</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"EditPlant\">\r\n        {this.getEditPlantForm()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditPlant\r\n","import './DeletePlant.scss'\r\nimport React from 'react'\r\n\r\nclass DeletePlant extends React.Component {\r\n\r\n  state = {\r\n    plant: this.props.plants.filter((plant)=>{\r\n      return this.props.modal.split('/')[1] === plant._id\r\n    })[0]\r\n  }\r\n\r\n  toUpper(word) {\r\n    if (word) return word[0].toUpperCase() + word.slice(1)\r\n  }\r\n\r\n  deletePlant(){\r\n    this.props.adminAction(null, `delete-plant/${this.state.plant._id}`)\r\n    this.props.modalAction('close')\r\n  }\r\n\r\n  getDeletePlantForm() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h2>Delete plant</h2>\r\n        <h3>Are you sure you want to delete the plant <i>{this.toUpper(this.state.plant.commonName)}</i>?</h3>\r\n        <button onClick={()=>this.deletePlant()}>DELETE</button>\r\n        <button onClick={()=>this.props.modalAction('close')}>Cancel</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"DeletePlant\">\r\n        {this.getDeletePlantForm()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DeletePlant\r\n","import './NewPost.scss'\r\nimport React from 'react'\r\nimport axios from 'axios'\r\n\r\nclass NewPost extends React.Component {\r\n\r\n  state = {\r\n    newPost: {}\r\n  }\r\n  \r\n  handleSubmit(event, data, url) {\r\n    event.preventDefault()\r\n    axios({\r\n      method: 'post',\r\n      url: `${process.env.REACT_APP_URL}/app/${url}`,\r\n      data: data,\r\n      withCredentials: true,\r\n    })\r\n      .then((result) => {\r\n        this.props.addMsg(result.data.data.message)\r\n        this.props.updateState('posts')\r\n        this.props.modalAction('close')\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  handleInput(event) {\r\n    const { name, value } = event.target\r\n    this.setState({\r\n      ...this.state,\r\n      newPost: { ...this.state.newPost, [name]: value },\r\n    })\r\n  }\r\n\r\n  getNewPostForm() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <form\r\n          className=\"form\"\r\n          onSubmit={(ev) => this.handleSubmit(ev, this.state.newPost, 'new-post')}\r\n        >\r\n          <h2>New post</h2>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    onChange={(event) => this.handleInput(event)}\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Post title\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    onChange={(event) => this.handleInput(event)}\r\n                    type=\"text\"\r\n                    name=\"image\"\r\n                    placeholder=\"Image URL\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"2\">\r\n                  <textarea\r\n                    id=\"new-post-textarea\"\r\n                    onChange={(event) => this.handleInput(event)}\r\n                    type=\"text\"\r\n                    name=\"content\"\r\n                    placeholder=\"Post content\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <button>Create new post</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"NewPost\">\r\n        {this.getNewPostForm()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NewPost\r\n","import './EditPost.scss'\r\nimport React from 'react'\r\n\r\nclass EditPost extends React.Component {\r\n  \r\n  state = {\r\n    editPost: this.props.posts.filter((post)=>{\r\n      return this.props.modal.split('/')[1] === post._id\r\n    })[0]\r\n  }\r\n\r\n  editPost(event) {\r\n    event.preventDefault()\r\n    this.props.adminAction(this.state.editPost, `edit-post/${this.state.editPost._id}`)\r\n    this.props.modalAction('close')\r\n  }\r\n\r\n  handleInput(event, form) {\r\n    const { name, value } = event.target\r\n    this.setState({\r\n      ...this.state,\r\n      [form]: { ...this.state[form], [name]: value },\r\n    })\r\n  }\r\n\r\n  getEditPostForm() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <form\r\n          className=\"form\"\r\n          onSubmit={(event) => this.editPost(event)}\r\n        >\r\n          <h2>Edit post</h2>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Image URL</td>\r\n                <td>\r\n                <input\r\n                    onChange={(event) => this.handleInput(event, 'editPost')}\r\n                    type=\"text\"\r\n                    name=\"image\"\r\n                    value={this.state.editPost.image}\r\n                />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Title</td>\r\n                <td>\r\n                <input\r\n                  onChange={(event) => this.handleInput(event, 'editPost')}\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={this.state.editPost.title}\r\n                />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Content</td>\r\n                <td>\r\n                <textarea\r\n                  onChange={(event) => this.handleInput(event, 'editPost')}\r\n                  type=\"text\"\r\n                  name=\"content\"\r\n                  value={this.state.editPost.content}\r\n                />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <button>Edit post</button>\r\n        </form>\r\n        <button onClick={()=>this.props.modalAction('open', `delete-post/${this.state.editPost._id}`)}>Delete post</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"EditPost\">\r\n        {this.getEditPostForm()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditPost\r\n","import './DeletePost.scss'\r\nimport React from 'react'\r\n\r\nclass DeletePost extends React.Component {\r\n\r\n  state = {\r\n    post: this.props.posts.filter((post)=>{\r\n      return this.props.modal.split('/')[1] === post._id\r\n    })[0]\r\n  }\r\n\r\n  toUpper(word) {\r\n    if (word) return word[0].toUpperCase() + word.slice(1)\r\n  }\r\n\r\n  deletePost(){\r\n    this.props.adminAction(null, `delete-post/${this.state.post._id}`)\r\n    this.props.modalAction('close')\r\n  }\r\n\r\n  getDeletePostForm() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h2>Delete post</h2>\r\n        <h3>Are you sure you want to delete the post <i>{this.toUpper(this.state.post.commonName)}</i>?</h3>\r\n        <button onClick={()=>this.deletePost()}>DELETE</button>\r\n        <button onClick={()=>this.props.modalAction('close')}>Cancel</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"DeletePost\">\r\n        {this.getDeletePostForm()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DeletePost\r\n","import './Modal.scss'\r\nimport React from 'react'\r\n\r\nimport 'react-responsive-modal/styles.css'\r\nimport { Modal } from \"react-responsive-modal\";\r\n\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport CheckoutForm from '../CheckoutForm'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\n\r\nimport Login from '../Login/Login'\r\nimport Signup from '../Signup/Signup'\r\nimport DeleteUser from '../DeleteUser/DeleteUser'\r\nimport NewPlant from '../NewPlant/NewPlant'\r\nimport EditPlant from '../EditPlant/EditPlant'\r\nimport DeletePlant from '../DeletePlant/DeletePlant'\r\nimport NewPost from '../NewPost/NewPost'\r\nimport EditPost from '../EditPost/EditPost'\r\nimport DeletePost from '../DeletePost/DeletePost'\r\n\r\nclass ModalComponent extends React.Component {\r\n  \r\n  showModal() {\r\n    const promise = loadStripe(\r\n      'pk_test_51IrpUwINyfw3Ussjr5TrEoNC8GW0dM1LdTMSLYsAIhofMEO44bCM8br241Ywwi96IRkCNMgKI4kMoSI8nugv9CSA0097t9atRk')\r\n    if(this.props.modal === 'login') {\r\n      return (\r\n        <div>\r\n          <Modal open={this.props.modalOpened} onClose={()=>this.props.modalAction('close')}>\r\n            <Login \r\n              {...this.props}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      )\r\n    } else if(this.props.modal === 'signup'){\r\n      return (\r\n        <div>\r\n          <Modal open={this.props.modalOpened} onClose={()=>this.props.modalAction('close')}>\r\n            <Signup \r\n              {...this.props}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      )\r\n    } else if(this.props.modal.includes('delete-user')){\r\n      return(\r\n        <div>\r\n          <Modal open={this.props.modalOpened} onClose={()=>this.props.modalAction('close')}>\r\n            <DeleteUser\r\n              {...this.props}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      )\r\n    } else if(this.props.modal === 'new-plant'){\r\n      return(\r\n        <div>\r\n          <Modal open={this.props.modalOpened} onClose={()=>this.props.modalAction('close')}>\r\n            <NewPlant\r\n              {...this.props}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      )\r\n    } else if(this.props.modal.includes('edit-plant')){\r\n      return(\r\n        <div>\r\n          <Modal open={this.props.modalOpened} onClose={()=>this.props.modalAction('close')}>\r\n            <EditPlant\r\n              {...this.props}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      )\r\n    } else if(this.props.modal.includes('delete-plant')){\r\n      return(\r\n        <div>\r\n          <Modal open={this.props.modalOpened} onClose={()=>this.props.modalAction('close')}>\r\n            <DeletePlant\r\n              {...this.props}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      )\r\n    } else if(this.props.modal === 'new-post'){\r\n      return(\r\n        <div>\r\n          <Modal open={this.props.modalOpened} onClose={()=>this.props.modalAction('close')}>\r\n            <NewPost\r\n              {...this.props}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      )\r\n    } else if(this.props.modal.includes('edit-post')){\r\n      return(\r\n        <div>\r\n          <Modal open={this.props.modalOpened} onClose={()=>this.props.modalAction('close')}>\r\n            <EditPost\r\n              {...this.props}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      )\r\n    } else if(this.props.modal.includes('delete-post')){\r\n      return(\r\n        <div>\r\n          <Modal open={this.props.modalOpened} onClose={()=>this.props.modalAction('close')}>\r\n            <DeletePost\r\n              {...this.props}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      )\r\n    } else if(this.props.modal === 'payment'){\r\n      return(\r\n        <div>\r\n          <Modal open={this.props.modalOpened} onClose={()=>this.props.modalAction('close')}>\r\n            <Elements\r\n              {...this.props}\r\n              stripe={promise}>\r\n              <CheckoutForm {...this.props}/>\r\n            </Elements>\r\n          </Modal>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return <div className=\"Modal\">{this.showModal()}</div>\r\n  }\r\n}\r\n\r\nexport default ModalComponent\r\n","// imports\r\nimport './Footer.scss'\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { VscGithub } from 'react-icons/vsc'\r\nimport {GrLinkedin} from 'react-icons/gr'\r\n\r\n// component\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Footer\">\r\n        <div>\r\n            <h5>About</h5>\r\n            <p>FAQ</p>    \r\n            <p>Contacts:</p>\r\n            <div className=\"contact\">\r\n              <p>Hector Martinez </p>\r\n              <a href=\"https://github.com/Thornnk\" target=\"_blank\" className=\"icons\"><VscGithub /></a> \r\n              <a href=\"https://www.linkedin.com/in/hector-md/\" target=\"_blank\" className=\"icons\"><GrLinkedin /></a> \r\n            </div>\r\n            <div className=\"contact\">\r\n              <p>Raquel Rodriguez  </p>\r\n              <a href=\"https://github.com/srtamaciel\" target=\"_blank\" className=\"icons\"><VscGithub /></a>  \r\n              <a href=\"https://www.linkedin.com/in/raquel-rodriguez-diaz/\" target=\"_blank\" className=\"icons\"><GrLinkedin /></a>  \r\n            </div>\r\n            <div className=\"contact\">\r\n              <p>German Delgado  </p>\r\n              <a href=\"https://github.com/GermanDG6\" target=\"_blank\" className=\"icons\"><VscGithub /></a>  \r\n              <a href=\"https://www.linkedin.com/in/germandelgadogarcia/\" target=\"_blank\" className=\"icons\"><GrLinkedin /></a> \r\n            </div>\r\n        </div>\r\n        <div>\r\n            <h5>Join Applant</h5>\r\n            <div className=\"Join\">\r\n            <Link className=\"link\" onClick={()=>this.props.modalAction('open', 'signup')}>\r\n               <p>Sign up</p>\r\n            </Link>\r\n            <Link className=\"link\" onClick={()=>this.props.modalAction('open', 'login')}>\r\n              <p>Login</p>\r\n            </Link>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <h5>Terms</h5>\r\n            <div className=\"Terms\">\r\n            <Link to=\"#\">Terms of Service</Link>\r\n            <Link to=\"#\">Privacy Policy</Link>\r\n            <Link to=\"#\">Returns and Delivery</Link>\r\n            <Link to=\"#\">Cookies</Link>\r\n            </div>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//export\r\nexport default Footer;\r\n","import './App.scss'\r\nimport React from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport ReactJson from 'react-json-view'\r\n\r\nimport Admin from './components/Admin/Admin'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Message from './components/Message/Message'\r\nimport Homepage from './components/Homepage/Homepage'\r\nimport PlantDetails from './components/PlantDetails/PlantDetails'\r\nimport Blog from './components/Blog/Blog'\r\nimport Store from './components/Store/Store'\r\nimport Profile from './components/Profile/Profile'\r\nimport StoreItem from './components/StoreItem'\r\nimport ShoppingCart from './components/ShoppingCart'\r\nimport Modal from './components/Modal/Modal'\r\nimport Footer from './components/Footer/Footer'\r\nimport Parallax from './components/Parallax/Parallax'\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    user: {\r\n      _id: '',\r\n      username: '',\r\n      password: '',\r\n      admin: false,\r\n      favoritePlants: [],\r\n      cart: [],\r\n      totalPrice: 0,\r\n    },\r\n    users: [],\r\n    plants: [],\r\n    posts: [],\r\n    message: '',\r\n    modal: '',\r\n    modalOpened: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateState('users')\r\n    this.updateState('plants')\r\n    this.updateState('posts')\r\n    this.updateState('user')\r\n  }\r\n  \r\n  updateState(url){\r\n    axios({\r\n      method: 'get',\r\n      url: `${process.env.REACT_APP_URL}/app/${url}`,\r\n      withCredentials: true,\r\n    })\r\n    .then((result) => {\r\n      if(result.data.data){\r\n        this.setState({[url]: result.data.data})\r\n      } else {\r\n        this.setState({[url]: null})\r\n        // return <Redirect to=\"/\"/>\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  modalAction(action, mod) {\r\n    if(mod) {\r\n      this.setState({modal: mod})}\r\n      if(action === 'open'){\r\n        this.setState({modalOpened: true})\r\n      } else if(action === 'close'){\r\n        this.setState({modalOpened: false})\r\n      }\r\n  }\r\n    \r\n  authAction(data, url){\r\n    axios({\r\n      method: 'post',\r\n      url: `${process.env.REACT_APP_URL}/app/${url}`,\r\n      data: data,\r\n      withCredentials: true,\r\n    })\r\n    .then((result) => {\r\n      this.addMsg(result.data.message)\r\n      this.updateState('user')\r\n      this.updateState('users')\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  adminAction(data, url) {\r\n    axios({\r\n      method: 'post',\r\n      url: `${process.env.REACT_APP_URL}/app/${url}`,\r\n      data: data,\r\n      withCredentials: true,\r\n    })\r\n    .then((result) => {\r\n      this.addMsg(result.data.message)\r\n      this.updateState('users')\r\n      this.updateState('plants')\r\n      this.updateState('posts')\r\n      this.updateState('user')\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n  \r\n  addFavoritePlant(selectedPlantId) { ////////////////\r\n    axios({\r\n      method: 'post',\r\n      url: `${process.env.REACT_APP_URL}/app/add-to-favorites/${selectedPlantId}`,\r\n      data: { user: this.state.user },\r\n      withCredentials: true,\r\n    })\r\n    .then((result) => {\r\n      this.addMsg(result.data.message)\r\n      this.updateState('user')\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  removeFavoritePlant(id) {\r\n    axios({\r\n      method: 'post',\r\n      url: `${process.env.REACT_APP_URL}/app/remove-from-favorites/${id}`,\r\n      withCredentials: true,\r\n    })\r\n      .then((result) => {\r\n        this.addMsg(result.data.message)\r\n        this.updateState('user')\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  editStateFromStoreItems(selectedPlantId, quantity) {\r\n    axios({\r\n      method: 'post',\r\n      url: `${process.env.REACT_APP_URL}/app/add-to-cart`,\r\n      data: {\r\n        plantId: selectedPlantId,\r\n        quantity: quantity,\r\n        user: this.state.user\r\n      },\r\n      withCredentials: true,\r\n    })\r\n    .then((result) => {\r\n      this.addMsg(result.data.message)\r\n      this.updateState('user')\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  deleteCartItem(id) {\r\n    axios({\r\n      method: 'post',\r\n      url: `${process.env.REACT_APP_URL}/app/remove-from-cart/${id}`,\r\n      withCredentials: true,\r\n    })\r\n    .then((result) => {\r\n      this.addMsg(result.data.message)\r\n      this.updateState('user')\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  addMsg(msg) {\r\n    this.setState({ ...this.state, message: msg })\r\n  }\r\n\r\n  cleanMsg() {\r\n    this.setState({ ...this.state, message: '' })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar\r\n          modalAction={(action, mod)=>this.modalAction(action, mod)}\r\n          authAction={(data, url) => this.authAction(data, url)}\r\n          userInfo={this.state.user}\r\n        />\r\n         \r\n        <Message msg={this.state.message} \r\n          message={this.state.message}\r\n          cleanMsg={() => this.cleanMsg()} />\r\n        <Modal\r\n          addMsg={(msg) => this.addMsg(msg)}\r\n          modal={this.state.modal}\r\n          modalAction={(action, mod) => this.modalAction(action, mod)}\r\n          modalOpened={this.state.modalOpened}\r\n          updateState={(url) => this.updateState(url)}\r\n          \r\n          authAction={(data, url) => this.authAction(data, url)}\r\n          \r\n          userInfo={this.state.user}\r\n          users={this.state.users}\r\n          plants={this.state.plants}\r\n          posts={this.state.posts}\r\n          adminAction={(data, url) => this.adminAction(data, url)}\r\n          editStateFromNewPost={(body, message) => \r\n            this.editStateFromNewPost(body, message)}\r\n        />\r\n\r\n        <Switch>\r\n          <Route path=\"/parallax\" exact component={()=> <Parallax /> } />\r\n          <Route\r\n            path=\"/all-plants\"\r\n            exact\r\n            component={() => (\r\n              <ReactJson src={this.state.plants} theme=\"hopscotch\" />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            component={() => <Homepage allPlants={this.state.plants} />}\r\n          />\r\n          <Route\r\n            path=\"/plant-details/:_id\"\r\n            exact\r\n            component={(routeProps) => (\r\n              <PlantDetails\r\n                {...routeProps}\r\n                allPlants={this.state.plants}\r\n                modalAction={(action, mod)=>this.modalAction(action, mod)}\r\n                userInfo={this.state.user}\r\n                addFavoritePlant={(selectedPlantId) =>\r\n                  this.addFavoritePlant(selectedPlantId)\r\n                }\r\n                adminAction={(data, url) => this.adminAction(data, url)}\r\n              />\r\n            )}\r\n          />\r\n          <Route \r\n            path=\"/blog\" \r\n            exact \r\n            component={() => \r\n              <Blog \r\n                userInfo={this.state.user}\r\n                posts={this.state.posts}\r\n                modalAction={(action, mod)=>this.modalAction(action, mod)}\r\n              />} />\r\n          <Route\r\n            path=\"/store\"\r\n            exact\r\n            component={() => <Store allPlants={this.state.plants} />}\r\n          />\r\n          <Route\r\n            path=\"/store-items/:_id\"\r\n            exact\r\n            component={(routeProps) => (\r\n              <StoreItem\r\n                {...routeProps}\r\n                plants={this.state.plants}\r\n                modalAction={(action, mod)=>this.modalAction(action, mod)}\r\n                userInfo={this.state.user}\r\n                editStateFromStoreItems={(selectedPlantId, quantity) =>\r\n                  this.editStateFromStoreItems(selectedPlantId, quantity)\r\n                }\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/admin\"\r\n            exact\r\n            component={() => (\r\n              <Admin\r\n                addMsg={(msg) => this.addMsg(msg)}\r\n                modalAction={(action, mod) => this.modalAction(action, mod)}\r\n                userInfo={this.state.user}\r\n                adminAction={(data, url) => this.adminAction(data, url)}\r\n                users={this.state.users}\r\n                plants={this.state.plants}\r\n                posts={this.state.posts}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/profile\"\r\n            exact\r\n            component={(routeProps) => (\r\n              <Profile\r\n                {...routeProps}\r\n                userInfo={this.state.user}\r\n                removeFavoritePlant={(event) => this.removeFavoritePlant(event)}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/shopping-cart\"\r\n            exact\r\n            component={() => (\r\n              <ShoppingCart\r\n                userInfo={this.state.user}\r\n                deleteFromCart={(id) => this.deleteCartItem(id)}\r\n                modalAction={(action, mod) => this.modalAction(action, mod)}\r\n              />\r\n            )}\r\n          />\r\n        </Switch>\r\n        <Footer \r\n          modalAction={(action, mod)=>this.modalAction(action, mod)}\r\n          authAction={(data, url) => this.authAction(data, url)} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n"],"sourceRoot":""}