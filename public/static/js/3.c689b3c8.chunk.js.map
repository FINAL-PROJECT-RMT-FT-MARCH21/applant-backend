{"version":3,"sources":["components/Admin/Admin.js","components/Navbar/Navbar.js","components/Message/Message.js","components/Homepage/Homepage.js","components/PlantDetails/PlantDetails.js","components/Blog/Blog.js","components/Store/Store.js","components/Profile/Profile.js","components/StoreItem.js","components/CheckoutForm.js","components/ShoppingCart.js","components/Login/Login.js","components/Signup/Signup.js","components/NewPost/NewPost.js","components/Modal/Modal.js","App.js"],"names":["Admin","state","newPlant","commonName","botanicalName","type","maintenance","water","exposure","safety","purifying","about","price","stock","inStore","newPost","adminPermissions","word","toUpperCase","slice","this","props","logInSuccess","userInfo","admin","event","form","url","index","preventDefault","adminAction","ev","_ev$target","target","name","value","stateCopy","Object","objectSpread","split","setState","_this2","react_default","a","createElement","className","onSubmit","handleSubmit","htmlFor","onChange","handleInput","placeholder","step","min","_this3","users","map","user","username","password","react_router_dom","onClick","concat","_id","_this4","plants","plant","toUpper","to","showUsers","showPlants","showNewPlantForm","React","Component","Navbar","_this","authAction","src","alt","modalAction","getNavbar","Message","msg","setTimeout","cleanMsg","getMsg","Homepage","filteredPlants","toConsumableArray","allPlants","filterPlants","by","toLowerCase","filter","includes","key","image","getSearchBar","getFilterButtons","length","getPlants","PlantDetails","match","params","toLikeNotLogged","redirectToAdmin","_event$target","console","log","defineProperty","action","selectedPlantId","setAppState","react_router","join","checked","likeToFavorites","showPlantDetails","Blog","posts","reverse","post","title","content","getPosts","Store","filteredStoreItems","filterStoreItems","getStoreItems","Profile","favoritePlants","removeFavoritePlant","forEach","getFavoritePlants","StoreItem","quantity","totalPrice","toCartLoggedStatus","undefined","editStateFromStoreItems","showSelected","addToCart","CheckoutForm","_useState","useState","_useState2","slicedToArray","succeeded","setSucceeded","_useState3","_useState4","error","setError","_useState5","_useState6","processing","setProcessing","_useState7","_useState8","disabled","setDisabled","_useState9","_useState10","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","useEffect","window","fetch","method","headers","Content-Type","body","JSON","stringify","items","id","then","res","json","data","handleChange","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","empty","message","stop","_x","apply","arguments","_ref2","_callee2","payload","_context2","confirmCardPayment","payment_method","card","getElement","CardElement","sent","_x2","react_stripe_umd","options","style","base","color","fontFamily","fontSmoothing","fontSize","::placeholder","invalid","iconColor","role","href","ShoppingCart","cart","item","deleteFromCart","index_esm","promise","loadStripe","lenght","getCartItems","Login","axios","withCredentials","result","addMsg","updateState","catch","err","login","getLoginForm","Signup","successSignup","showSignup","NewPost","colSpan","getNewPostForm","ModalComponent","modal","react_responsive_modal_esm","open","modalOpened","onClose","components_Login_Login","components_Signup_Signup","components_NewPost_NewPost","showModal","App","mod","onlyUpdateState","updateUser","getUsers","_this5","plantId","updatedPlant","plantsWithoutUpdatedPlant","toString","updatedPlants","updatedUser","_this6","push","_this7","updatedItems","_this8","_this9","components_Navbar_Navbar","upd","components_Message_Message","Modal_Modal","editStateFromNewPost","path","exact","component","main_default","theme","components_Homepage_Homepage","routeProps","components_PlantDetails_PlantDetails","assign","editStateFromPlantDetails","components_Blog_Blog","components_Store_Store","components_StoreItem","components_Admin_Admin","components_Profile_Profile","components_ShoppingCart","deleteCartItem"],"mappings":"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","file":"static/js/3.c689b3c8.chunk.js","sourcesContent":["import './Admin.scss'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Admin extends React.Component {\r\n  state = {\r\n    newPlant: {\r\n      commonName: '',\r\n      botanicalName: '',\r\n      type: [],\r\n      maintenance: [],\r\n      water: [],\r\n      exposure: [],\r\n      safety: '',\r\n      purifying: false,\r\n      about: '',\r\n      price: 0,\r\n      stock: 0,\r\n      inStore: false,\r\n    },\r\n    newPost: {},\r\n    adminPermissions: false,\r\n  }\r\n\r\n  toUpper(word) {\r\n    if (word) return word[0].toUpperCase() + word.slice(1)\r\n  }\r\n\r\n  isAdmin() {\r\n    if (this.props.logInSuccess) {\r\n      if (this.props.userInfo.admin) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit(event, form, url, index) {\r\n    event.preventDefault()\r\n    index\r\n      ? this.props.adminAction(this.state[form][index], url)\r\n      : this.props.adminAction(this.state[form], url)\r\n  }\r\n\r\n  handleInput(ev, form) {\r\n    const { name, value } = ev.target\r\n    const stateCopy = { ...this.state }\r\n    if (name === 'type') {\r\n      stateCopy[form][name] =\r\n      value === 'all' ? ['indoors', 'outdoors'] : value.split(' ')\r\n    } else if (name === 'exposure') {\r\n      stateCopy[form][name] =\r\n      value === 'all' ? ['low', 'medium', 'high'] : value.split(' ')\r\n    } else if (name === 'purifying' || name === 'inStore') {\r\n      stateCopy[form][name] = value ? true : false\r\n    } else {\r\n      stateCopy[form][name] = value\r\n    }\r\n    this.setState(stateCopy)\r\n  }\r\n  \r\n  showNewPlantForm() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h2>New plant</h2>\r\n        <form\r\n          className=\"form\"\r\n          onSubmit={(ev) => this.handleSubmit(ev, 'newPlant', 'new-plant')}\r\n        >\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td className=\"label-column\">\r\n                  <label htmlFor=\"image\">Image URL</label>\r\n                </td>\r\n                <td className=\"input-column\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"image\"\r\n                    onChange={(ev) => this.handleInput(ev, 'newPlant')}\r\n                    placeholder=\"https://ibb.co/KyKxWZv\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"label-column\">\r\n                  <label htmlFor=\"commonName\">Common name</label>\r\n                </td>\r\n                <td className=\"input-column\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"commonName\"\r\n                    onChange={(ev) => this.handleInput(ev, 'newPlant')}\r\n                    placeholder=\"encina\"\r\n                    />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"label-column\">\r\n                  <label htmlFor=\"botanicalName\">Botanical name</label>\r\n                </td>\r\n                <td className=\"input-column\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"botanicalName\"\r\n                    onChange={(ev) => this.handleInput(ev, 'newPlant')}\r\n                    placeholder=\"quercus ilex\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"label-column\">\r\n                  <label htmlFor=\"type\">Type</label>\r\n                </td>\r\n                <td className=\"input-column\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"type\"\r\n                    onChange={(ev) => this.handleInput(ev, 'newPlant')}\r\n                    placeholder=\"indoors / outdoors\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"label-column\">\r\n                  <label htmlFor=\"maintenance\">Maintenance</label>\r\n                </td>\r\n                <td className=\"input-column\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"maintenance\"\r\n                    onChange={(ev) => this.handleInput(ev, 'newPlant')}\r\n                    placeholder=\"low / medium / high\"\r\n                    />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"label-column\">\r\n                  <label htmlFor=\"water\">Water</label>\r\n                </td>\r\n                <td className=\"input-column\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"water\"\r\n                    onChange={(ev) => this.handleInput(ev, 'newPlant')}\r\n                    placeholder=\"low / medium / high\"\r\n                    />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"label-column\">\r\n                  <label htmlFor=\"exposure\">Exposure</label>\r\n                </td>\r\n                <td className=\"input-column\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"exposure\"\r\n                    onChange={(ev) => this.handleInput(ev, 'newPlant')}\r\n                    placeholder=\"low / medium / high\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"label-column\">\r\n                  <label htmlFor=\"safety\">Safety</label>\r\n                </td>\r\n                <td className=\"input-column\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"safety\"\r\n                    onChange={(ev) => this.handleInput(ev, 'newPlant')}\r\n                    placeholder=\"yes / (details)\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"label-column\">\r\n                  <label htmlFor=\"purifying\">Purifying</label>\r\n                </td>\r\n                <td className=\"input-column\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"purifying\"\r\n                    onChange={(ev) => this.handleInput(ev, 'newPlant')}\r\n                    value=\"true\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"label-column\">\r\n                  <label htmlFor=\"about\">About</label>\r\n                </td>\r\n                <td className=\"input-column\">\r\n                  <textarea\r\n                    className=\"textarea\"\r\n                    type=\"text\"\r\n                    name=\"about\"\r\n                    onChange={(ev) => this.handleInput(ev, 'newPlant')}\r\n                    />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"label-column\">\r\n                  <label htmlFor=\"price\">Price</label>\r\n                </td>\r\n                <td className=\"input-column\">\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    name=\"price\"\r\n                    onChange={(ev) => this.handleInput(ev, 'newPlant')}\r\n                    placeholder=\"0 €\"\r\n                    min={0}\r\n                    />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"label-column\">\r\n                  <label htmlFor=\"stock\">Stock</label>\r\n                </td>\r\n                <td className=\"input-column\">\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"stock\"\r\n                    onChange={(ev) => this.handleInput(ev, 'newPlant')}\r\n                    placeholder={0}\r\n                    />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"label-column\">\r\n                  <label htmlFor=\"inStore\">In store </label>\r\n                </td>\r\n                <td className=\"input-column\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"inStore\"\r\n                    onChange={(ev) => this.handleInput(ev, 'newPlant')}\r\n                    value=\"true\"\r\n                    />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <button>Create new plant</button>\r\n        </form>\r\n        {/* {!this.isAdmin() ? <Redirect to=\"#openModal\" /> : null} */}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  showUsers() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h2>List of users</h2>\r\n        <table>\r\n          <tbody>\r\n            {this.props.users.map((user, index) => {\r\n              return (\r\n                <tr>\r\n                  <td><input type=\"text\" name=\"username\" value={user.username}/></td>\r\n                  <td><input type=\"password\" name=\"password\" value={user.password}/></td>\r\n                  <div className=\"table-btns\">\r\n                    <Link className=\"link\" onClick={()=>this.props.adminAction(user, `/edit-user/${user._id}`)}>\r\n                      Modify user\r\n                    </Link>\r\n                    <Link className=\"link\" onClick={()=>this.props.adminAction(null, `/delete-user/${user._id}`)}>\r\n                      Delete user\r\n                    </Link>\r\n                  </div>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  showPlants() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h2>List of plants</h2>\r\n        <table>\r\n          <tbody>\r\n            {this.props.plants.map((plant, index) => {\r\n              return (\r\n                <tr>\r\n                  <td>{this.toUpper(plant.commonName)}</td>\r\n                  <div className=\"table-btns\">\r\n                    <Link className=\"link\" to={`plant-details/${plant._id}`}>\r\n                      Modify plant\r\n                    </Link>\r\n                  </div>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"Admin\">\r\n        {this.showUsers()}\r\n        {this.showPlants()}\r\n        {this.showNewPlantForm()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Admin\r\n","import './Navbar.scss'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Navbar extends React.Component {\r\n  getNavbar() {\r\n    if (this.props.userInfo) {\r\n      if (this.props.userInfo.admin) {\r\n        return (\r\n          <div className=\"navbar-child\">\r\n            <div className=\"nav-left\">\r\n              <Link className=\"link\" to=\"/\">\r\n                <div className=\"nav-btn\">Home</div>\r\n              </Link>\r\n              <Link className=\"link\" to=\"/blog\">\r\n                <div className=\"nav-btn\">Blog</div>\r\n              </Link>\r\n              <Link className=\"link\" to=\"/store\">\r\n                <div className=\"nav-btn\">Store</div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"nav-right\">\r\n              <Link className=\"link\" to=\"/admin\">\r\n                <div className=\"nav-btn\">Admin</div>\r\n              </Link>\r\n              <Link className=\"link\" to=\"/profile\">\r\n                <div className=\"nav-btn\">Profile</div>\r\n              </Link>\r\n              <Link className=\"link\" onClick={()=>this.props.authAction(null, 'logout')}>\r\n                  <div className=\"nav-btn\">Logout</div>\r\n              </Link>\r\n              <div className=\"nav-btn cart-icon\">\r\n                <Link className=\"link\" to=\"/shopping-cart\">\r\n                  <img src=\"/icons/shopping-cart-icon.png\" alt=\"cart\" />\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"navbar-child\">\r\n            <div className=\"nav-left\">\r\n              <Link className=\"link\" to=\"/\">\r\n                <div className=\"nav-btn\">Home</div>\r\n              </Link>\r\n              <Link className=\"link\" to=\"/blog\">\r\n                <div className=\"nav-btn\">Blog</div>\r\n              </Link>\r\n              <Link className=\"link\" to=\"/store\">\r\n                <div className=\"nav-btn\">Store</div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"nav-right\">\r\n              <Link className=\"link\" to=\"/profile\">\r\n                <div className=\"nav-btn\">Profile</div>\r\n              </Link>\r\n              <Link className=\"link\" onClick={()=>this.props.authAction(null, 'logout')}>\r\n                <div className=\"nav-btn\">Logout</div>\r\n              </Link>\r\n              <div className=\"nav-btn cart-icon\">\r\n                <Link className=\"link\" to=\"/shopping-cart\">\r\n                  <img src=\"/icons/shopping-cart-icon.png\" alt=\"cart\" />\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    } else {\r\n      return (\r\n        <div className=\"navbar-child\">\r\n          <div className=\"nav-left\">\r\n            <Link className=\"link\" to=\"/\">\r\n              <div className=\"nav-btn\">Home</div>\r\n            </Link>\r\n            <Link className=\"link\" to=\"/blog\">\r\n              <div className=\"nav-btn\">Blog</div>\r\n            </Link>\r\n            <Link className=\"link\" to=\"/store\">\r\n              <div className=\"nav-btn\">Store</div>\r\n            </Link>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <Link className=\"link\" onClick={()=>this.props.modalAction('open', 'login')}>\r\n              <div className=\"nav-btn\">Login</div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  /*{ <Link className=\"link\" to=\"/signup\">Sign up | </Link> }*/\r\n  render() {\r\n    return <nav className=\"Navbar\">{this.getNavbar()}</nav>\r\n  }\r\n}\r\n\r\nexport default Navbar\r\n","import './Message.scss'\r\nimport React from 'react'\r\n\r\nclass Message extends React.Component {\r\n  getMsg() {\r\n    if (this.props.msg) {\r\n      setTimeout(() => {\r\n        this.props.cleanMsg()\r\n      }, 2000)\r\n      return <p>{this.props.msg}</p>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"Message\">{this.getMsg()}</div>\r\n  }\r\n}\r\n\r\nexport default Message\r\n","import './Homepage.scss'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Homepage extends React.Component {\r\n  state = {\r\n    filteredPlants: [...this.props.allPlants],\r\n  }\r\n\r\n  getSearchBar() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search plant\"\r\n        onChange={(event) => this.filterPlants(event, 'commonName')}\r\n      />\r\n    )\r\n  }\r\n\r\n  getFilterButtons() {\r\n    return (\r\n      <div className=\"filter-buttons\">\r\n        <button onClick={() => this.filterPlants()}>All</button>\r\n        <button onClick={() => this.filterPlants(null, 'type', 'indoors')}>\r\n          Indoors\r\n        </button>\r\n        <button onClick={() => this.filterPlants(null, 'type', 'outdoors')}>\r\n          Outdoors\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  filterPlants(event, by, type) {\r\n    let filteredPlants, value\r\n    if (by === 'commonName') {\r\n      value = event.target.value.toLowerCase()\r\n      filteredPlants = this.props.allPlants.filter((plant) =>\r\n        plant[by].includes(value)\r\n      )\r\n    } else if (by === 'type') {\r\n      filteredPlants = this.props.allPlants.filter((plant) =>\r\n        plant.type.includes(type)\r\n      )\r\n    } else {\r\n      filteredPlants = this.props.allPlants\r\n    }\r\n    this.setState({ ...this.state, filteredPlants: filteredPlants })\r\n  }\r\n\r\n  getPlants() {\r\n    const plants = this.state.filteredPlants\r\n    return plants.map((plant, index) => {\r\n      return (\r\n        <div key={index} className=\"plant-card\">\r\n          <Link className=\"link\" to={`/plant-details/${plant._id}`}>\r\n            <img src={plant.image} alt={plant.commonName} />\r\n          </Link>\r\n          <h2>\r\n            {plant.commonName[0].toUpperCase() + plant.commonName.slice(1)}\r\n          </h2>\r\n          <h3>\r\n            (\r\n            {plant.botanicalName[0].toUpperCase() +\r\n              plant.botanicalName.slice(1)}\r\n            )\r\n          </h3>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Homepage\">\r\n        <h1 className=\"main-title\">All plants</h1>\r\n        {this.getSearchBar()}\r\n        {this.getFilterButtons()}\r\n        {this.props.allPlants.length === 0 ? (\r\n          <div className=\"spinner\">\r\n            <div className=\"lds-ripple\">\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"plant-cards-container\">{this.getPlants()}</div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Homepage\r\n","import './PlantDetails.scss'\r\nimport React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nclass PlantDetails extends React.Component {\r\n  state = {\r\n    plant: {\r\n      ...this.props.allPlants.filter(\r\n        (plant) => this.props.match.params._id === plant._id\r\n      )[0],\r\n    },\r\n    toLikeNotLogged: false,\r\n    redirectToAdmin: false,\r\n  }\r\n\r\n  toUpper(word) {\r\n    return word[0].toUpperCase() + word.slice(1)\r\n  }\r\n\r\n  handleInput(event) {\r\n    const { name, value } = event.target\r\n    console.log(name, value)\r\n    this.setState({\r\n      ...this.state,\r\n      plant: { ...this.state.plant, [name]: value },\r\n    })\r\n  }\r\n\r\n  adminAction(action) {\r\n    if (action === 'edit') {\r\n      this.props.adminAction(\r\n        this.state.plant,\r\n        `edit-plant/${this.state.plant._id}`\r\n      )\r\n    } else if (action === 'delete') {\r\n      this.props.adminAction(null, `delete-plant/${this.state.plant._id}`)\r\n      this.setState({ ...this.state, redirectToAdmin: true })\r\n    }\r\n  }\r\n\r\n  likeToFavorites() {\r\n    const selectedPlantId = this.props.match.params._id\r\n    if (this.props.logInSuccess) {\r\n      this.props.setAppState(selectedPlantId)\r\n    } else {\r\n      this.setState({ ...this.state, toLikeNotLogged: true })\r\n    }\r\n  }\r\n\r\n  showPlantDetails() {\r\n    if (this.state.redirectToAdmin) {\r\n      return <Redirect to=\"/admin\" />\r\n    }\r\n    if (this.props.userInfo){\r\n      if (this.props.userInfo.admin) {\r\n        return (\r\n          <div className=\"PlantDetails\">\r\n            <div className=\"imageAndButtons\">\r\n              <img\r\n                src={this.state.plant.image}\r\n                alt={this.state.plant.commonName}\r\n              />\r\n              <button\r\n                className=\"link-btn\"\r\n                onClick={() => this.adminAction('edit')}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                className=\"link-btn\"\r\n                onClick={() => this.adminAction('delete')}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n            <div className=\"infoPlantDetails\">\r\n              <form\r\n                className=\"form\"\r\n                onSubmit={(ev) => this.handleSubmit(ev, 'newPlant', 'new-plant')}\r\n              >\r\n                <h2>{this.toUpper(this.state.plant.commonName)}</h2>\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Image URL</td>\r\n                      <td>\r\n                        <input\r\n                          onChange={(event) => this.handleInput(event)}\r\n                          type=\"text\"\r\n                          name=\"image\"\r\n                          value={this.state.plant.image}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Common name</td>\r\n                      <td>\r\n                        <input\r\n                          onChange={(event) => this.handleInput(event)}\r\n                          type=\"text\"\r\n                          name=\"commonName\"\r\n                          value={this.state.plant.commonName}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Botanical name</td>\r\n                      <td>\r\n                        <input\r\n                          onChange={(event) => this.handleInput(event)}\r\n                          type=\"text\"\r\n                          name=\"botanicalName\"\r\n                          value={this.state.plant.botanicalName}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Type</td>\r\n                      <td>\r\n                        <input\r\n                          onChange={(event) => this.handleInput(event)}\r\n                          type=\"text\"\r\n                          name=\"type\"\r\n                          value={this.state.plant.type.join(' ')}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Maintenance</td>\r\n                      <td>\r\n                        <input\r\n                          onChange={(event) => this.handleInput(event)}\r\n                          type=\"text\"\r\n                          name=\"maintenance\"\r\n                          value={this.state.plant.maintenance}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Water</td>\r\n                      <td>\r\n                        <input\r\n                          onChange={(event) => this.handleInput(event)}\r\n                          type=\"text\"\r\n                          name=\"water\"\r\n                          value={this.state.plant.water}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Exposure</td>\r\n                      <td>\r\n                        <input\r\n                          onChange={(event) => this.handleInput(event)}\r\n                          type=\"text\"\r\n                          name=\"exposure\"\r\n                          value={this.state.plant.exposure.join(' ')}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Safety</td>\r\n                      <td>\r\n                        <input\r\n                          onChange={(event) => this.handleInput(event)}\r\n                          type=\"text\"\r\n                          name=\"safety\"\r\n                          value={this.state.plant.safety}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    {this.state.plant.purifying ? (\r\n                      <tr>\r\n                        <td>Purifying</td>\r\n                        <td>\r\n                          <input\r\n                            onChange={(event) => this.handleInput(event)}\r\n                            type=\"checkbox\"\r\n                            name=\"purifying\"\r\n                            value={1}\r\n                            checked\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr>\r\n                        <td>Purifying</td>\r\n                        <td>\r\n                          <input\r\n                            onChange={(event) => this.handleInput(event)}\r\n                            type=\"checkbox\"\r\n                            name=\"purifying\"\r\n                            value={1}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                    <tr>\r\n                      <td>About</td>\r\n                      <td>\r\n                        <textarea name=\"about\" value={this.state.plant.about} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Price</td>\r\n                      <td>\r\n                        <input\r\n                          onChange={(event) => this.handleInput(event)}\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          value={this.state.plant.price}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Stock</td>\r\n                      <td>\r\n                        <input\r\n                          onChange={(event) => this.handleInput(event)}\r\n                          type=\"number\"\r\n                          name=\"stock\"\r\n                          value={this.state.plant.stock}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    {this.state.plant.inStore ? (\r\n                      <tr>\r\n                        <td>In store</td>\r\n                        <td>\r\n                          <input\r\n                            onChange={(event) => this.handleInput(event)}\r\n                            type=\"checkbox\"\r\n                            name=\"inStore\"\r\n                            value={1}\r\n                            checked\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr>\r\n                        <td>In store</td>\r\n                        <td>\r\n                          <input\r\n                            onChange={(event) => this.handleInput(event)}\r\n                            type=\"checkbox\"\r\n                            name=\"inStore\"\r\n                            value={1}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"PlantDetails\">\r\n            <div className=\"imageAndButtons\">\r\n              <img\r\n                src={this.state.plant.image}\r\n                alt={this.state.plant.commonName}\r\n              />\r\n              <button className=\"link-btn\" onClick={() => this.likeToFavorites()}>\r\n                Like\r\n              </button>\r\n              <Link\r\n                className=\"link-btn\"\r\n                to={`/store-items/${this.props.match.params._id}`}\r\n              >\r\n                Go to store\r\n              </Link>\r\n            </div>\r\n            <div className=\"infoPlantDetails\">\r\n              <h2>{this.toUpper(this.state.plant.commonName)}</h2>\r\n              <i>\r\n                <h3>{this.toUpper(this.state.plant.botanicalName)}</h3>\r\n              </i>\r\n\r\n              <p>\r\n                <b>Maintenance:</b> {this.toUpper(this.state.plant.maintenance)}\r\n              </p>\r\n\r\n              <p>\r\n                <b>Watering:</b> {this.toUpper(this.state.plant.water)}\r\n              </p>\r\n\r\n              <p>\r\n                <b>Type:</b>{' '}\r\n                {this.state.plant.type.map((type) => {\r\n                  return `${this.toUpper(type)} `\r\n                })}\r\n              </p>\r\n\r\n              <p>\r\n                <b>Exposure: </b>\r\n                {this.state.plant.exposure.map((exposure) =>\r\n                  this.toUpper(exposure)\r\n                )}\r\n              </p>\r\n\r\n              <p>\r\n                <b>Air purifying:</b> {this.state.plant.purifying ? 'Yes' : 'No'}\r\n              </p>\r\n\r\n              <p>\r\n                <b>Pet/baby safe:</b> {this.state.plant.safety}\r\n              </p>\r\n\r\n              <h3>\r\n                <b>About {this.toUpper(this.state.plant.commonName)}</b>\r\n              </h3>\r\n              <p>{this.state.plant.about}</p>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    } else {\r\n      return (\r\n        <div className=\"PlantDetails\">\r\n          <div className=\"imageAndButtons\">\r\n            <img\r\n              src={this.state.plant.image}\r\n              alt={this.state.plant.commonName}\r\n            />\r\n            <button className=\"link-btn\" onClick={() => this.likeToFavorites()}>\r\n              Like\r\n            </button>\r\n            <Link\r\n              className=\"link-btn\"\r\n              to={`/store-items/${this.props.match.params._id}`}\r\n            >\r\n              Go to store\r\n            </Link>\r\n          </div>\r\n          <div className=\"infoPlantDetails\">\r\n            <h2>{this.toUpper(this.state.plant.commonName)}</h2>\r\n            <i>\r\n              <h3>{this.toUpper(this.state.plant.botanicalName)}</h3>\r\n            </i>\r\n\r\n            <p>\r\n              <b>Maintenance:</b> {this.toUpper(this.state.plant.maintenance)}\r\n            </p>\r\n\r\n            <p>\r\n              <b>Watering:</b> {this.toUpper(this.state.plant.water)}\r\n            </p>\r\n\r\n            <p>\r\n              <b>Type:</b>{' '}\r\n              {this.state.plant.type.map((type) => {\r\n                return `${this.toUpper(type)} `\r\n              })}\r\n            </p>\r\n\r\n            <p>\r\n              <b>Exposure: </b>\r\n              {this.state.plant.exposure.map((exposure) =>\r\n                this.toUpper(exposure)\r\n              )}\r\n            </p>\r\n\r\n            <p>\r\n              <b>Air purifying:</b> {this.state.plant.purifying ? 'Yes' : 'No'}\r\n            </p>\r\n\r\n            <p>\r\n              <b>Pet/baby safe:</b> {this.state.plant.safety}\r\n            </p>\r\n\r\n            <h3>\r\n              <b>About {this.toUpper(this.state.plant.commonName)}</b>\r\n            </h3>\r\n            <p>{this.state.plant.about}</p>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PlantDetails\">\r\n        <h2 className=\"main-title\">PlantDetails</h2>\r\n        {this.showPlantDetails()}\r\n        {this.state.toLikeNotLogged ? <Redirect to=\"/login\" /> : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default PlantDetails\r\n","import './Blog.scss'\r\nimport React from 'react'\r\n\r\nclass Blog extends React.Component {\r\n  getPosts(){\r\n    return (\r\n      <div className=\"post-container\">\r\n        {this.props.userInfo ? \r\n          (this.props.userInfo.admin ?\r\n          <div><button onClick={()=>this.props.modalAction('open', 'newPost')}>\r\n              New post\r\n            </button></div>\r\n          : null)\r\n        : null}\r\n        {this.props.posts.reverse().map((post)=>{\r\n          return (\r\n            <div className=\"post\">\r\n              <div><img src={post.image} alt=\"post-img\"/></div>\r\n              <div className=\"post-content\">\r\n                <h2>{post.title}</h2>\r\n                <p>{post.content}</p>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Blog\">\r\n        {this.getPosts()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Blog\r\n","import './Store.scss'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Store extends React.Component {\r\n  state = {\r\n    filteredStoreItems: [...this.props.allPlants],\r\n  }\r\n\r\n  getSearchBar() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search plant\"\r\n        onChange={(event) => this.filterStoreItems(event, 'commonName')}\r\n      />\r\n    )\r\n  }\r\n\r\n  getFilterButtons() {\r\n    return (\r\n      <div className=\"filter-buttons\">\r\n        <button onClick={() => this.filterStoreItems()}>All</button>\r\n        <button onClick={() => this.filterStoreItems(null, 'type', 'indoors')}>\r\n          Indoors\r\n        </button>\r\n        <button onClick={() => this.filterStoreItems(null, 'type', 'outdoors')}>\r\n          Outdoors\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  filterStoreItems(event, by, type) {\r\n    let filteredStoreItems, value\r\n    if (by === 'commonName') {\r\n      value = event.target.value.toLowerCase()\r\n      filteredStoreItems = this.props.allPlants.filter((plant) =>\r\n        plant[by].includes(value)\r\n      )\r\n    } else if (by === 'type') {\r\n      filteredStoreItems = this.props.allPlants.filter((plant) =>\r\n        plant.type.includes(type)\r\n      )\r\n    } else {\r\n      filteredStoreItems = this.props.allPlants\r\n    }\r\n    this.setState({ ...this.state, filteredStoreItems: filteredStoreItems })\r\n  }\r\n\r\n  getStoreItems() {\r\n    const storeItems = this.state.filteredStoreItems\r\n    return storeItems.map((plant, index) => {\r\n      return (\r\n        <div key={index} className=\"plant-card\">\r\n          <Link className=\"link\" to={`/store-items/${plant._id}`}>\r\n            <img src={plant.image} alt={plant.commonName} />\r\n          </Link>\r\n          <h2>\r\n            {plant.commonName[0].toUpperCase() + plant.commonName.slice(1)}\r\n          </h2>\r\n          <h3>\r\n            (\r\n            {plant.botanicalName[0].toUpperCase() +\r\n              plant.botanicalName.slice(1)}\r\n            )\r\n          </h3>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Homepage\">\r\n        <h1 className=\"main-title\">Store</h1>\r\n        {this.getSearchBar()}\r\n        {this.getFilterButtons()}\r\n        <div className=\"plant-cards-container\">{this.getStoreItems()}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Store\r\n","import './Profile.scss'\r\nimport React from 'react'\r\n\r\nclass Profile extends React.Component {\r\n  toUpper(word) {\r\n    if (word) return word[0].toUpperCase() + word.slice(1)\r\n  }\r\n\r\n  getFavoritePlants() {\r\n    const { favoritePlants } = this.props.userInfo\r\n    if (favoritePlants.length > 0) {\r\n      return favoritePlants.map((plant, index) => {\r\n        // TODO a veces da undefined\r\n        console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', plant)\r\n        if (plant){\r\n          return (\r\n            <div key={index} className=\"plant-card\">\r\n              <img src={plant.image} alt={plant.commonName} />\r\n  \r\n              <h2>{this.toUpper(plant.commonName)}</h2>\r\n  \r\n              <h3>({this.toUpper(plant.botanicalName)})</h3>\r\n  \r\n              <button\r\n                className=\"link-btn\"\r\n                onClick={() => this.props.removeFavoritePlant(plant._id)}\r\n              >\r\n                Delete\r\n              </button>\r\n  \r\n              <p>\r\n                <b>Maintenance:</b> {this.toUpper(plant.maintenance)}\r\n              </p>\r\n  \r\n              <p>\r\n                <b>Watering:</b> {this.toUpper(plant.water)}\r\n              </p>\r\n  \r\n              <p>\r\n                <b>Type: </b>\r\n                {plant.type.map((type) => {\r\n                  return `${this.toUpper(type)} `\r\n                })}\r\n              </p>\r\n              <p>{plant.exposure.forEach((exposure) => exposure)}</p>\r\n  \r\n              <p>\r\n                <b>Air purifying:</b> {plant.purifying ? 'Yes' : 'No'}\r\n              </p>\r\n  \r\n              <p>\r\n                <b>Pet/baby safe:</b> {plant.safety}\r\n              </p>\r\n  \r\n              <h3>\r\n                <b>About {this.toUpper(plant.commonName)}</b>\r\n              </h3>\r\n              <p>{plant.about}</p>\r\n            </div>\r\n          )\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.props.userInfo ? \r\n        <div className=\"Profile\">\r\n          <h1>{`${this.toUpper(this.props.userInfo.username)}'s page`}</h1>\r\n          <h2>Your favorite plants</h2>\r\n          <div className=\"plant-cards-container\">{this.getFavoritePlants()}</div>\r\n        </div>\r\n      : <h1>Login required</h1>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nclass StoreItem extends React.Component {\r\n  state = {\r\n    selectedPlantId: [],\r\n    quantity: 0,\r\n    totalPrice: 0, \r\n    toCartLoggedStatus: undefined,\r\n  }\r\n\r\n  handleInput(event) {\r\n    const selectedPlantId = this.props.match.params._id\r\n    const quantity = event.target.value\r\n\r\n    if (this.props.userInfo) {\r\n      this.setState({ ...this.state, selectedPlantId, quantity })\r\n    }\r\n  }\r\n\r\n  addToCart() {\r\n    if (this.props.logInSuccess) {\r\n      this.props.editStateFromStoreItems(this.state.selectedPlantId, this.state.quantity)\r\n      this.setState({ ...this.state, toCartLoggedStatus: 'logged' })\r\n    } else {\r\n      this.setState({ ...this.state, toCartLoggedStatus: 'not logged' })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    const selectedPlantId = this.props.match.params._id\r\n    const showSelected = this.props.plants.filter((plant) => {\r\n      return selectedPlantId === plant._id\r\n    })[0]\r\n    const totalPrice = showSelected.price \r\n    \r\n\r\nconsole.log(showSelected)\r\n    return this.props.plants.length === 0 ? (\r\n      <div className=\"spinner\">\r\n        <div className=\"lds-ripple\">\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div className=\"plant-cards-container\">\r\n        <div className=\"plant-card\">\r\n          <img src={showSelected.image} alt={showSelected.commonName} />\r\n          <h2>\r\n            {showSelected.commonName[0].toUpperCase() +\r\n              showSelected.commonName.slice(1)}\r\n          </h2>\r\n          <p>\r\n            <i>\r\n              {showSelected.botanicalName[0].toUpperCase() +\r\n                showSelected.botanicalName.slice(1)}\r\n            </i>\r\n          </p>\r\n          <input\r\n            className=\"input\"\r\n            type=\"number\"\r\n            placeholder=\"0\"\r\n            min=\"0\"\r\n            name=\"quantity\"\r\n            onChange={(event) => this.handleInput(event)}\r\n          />\r\n          <strong>\r\n            <p>{showSelected.price}€</p>\r\n          </strong>\r\n\r\n          <button onClick={() => this.addToCart()}>Add to cart</button>\r\n\r\n          <Link to={`/plant-details/${selectedPlantId}`}>View details</Link>\r\n        </div>\r\n        {this.state.toCartLoggedStatus === 'not logged' ? (\r\n          <Redirect to=\"#openModal\" />\r\n        ) : null}\r\n        {this.state.toCartLoggedStatus === 'logged' ? (\r\n          <Redirect to=\"/shopping-cart\" />\r\n        ) : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StoreItem\r\n","import React, { useState, useEffect } from 'react'\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\r\n\r\nexport default function CheckoutForm() {\r\n  const [succeeded, setSucceeded] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [processing, setProcessing] = useState('')\r\n  const [disabled, setDisabled] = useState(true)\r\n  const [clientSecret, setClientSecret] = useState('')\r\n  const stripe = useStripe()\r\n  const elements = useElements()\r\n  useEffect(() => {\r\n    // Create PaymentIntent as soon as the page loads\r\n    window\r\n      .fetch('http://localhost:5000/create-payment-intent', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ items: [{ id: 'xl-tshirt' }] }),\r\n      })\r\n      .then((res) => {\r\n        return res.json()\r\n      })\r\n      .then((data) => {\r\n        setClientSecret(data.clientSecret)\r\n      })\r\n  }, [])\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: '#32325d',\r\n        fontFamily: 'Arial, sans-serif',\r\n        fontSmoothing: 'antialiased',\r\n        fontSize: '16px',\r\n        '::placeholder': {\r\n          color: '#32325d',\r\n        },\r\n      },\r\n      invalid: {\r\n        color: '#fa755a',\r\n        iconColor: '#fa755a',\r\n      },\r\n    },\r\n  }\r\n  const handleChange = async (event) => {\r\n    // Listen for changes in the CardElement\r\n    // and display any errors as the customer types their card details\r\n    setDisabled(event.empty)\r\n    setError(event.error ? event.error.message : '')\r\n  }\r\n  const handleSubmit = async (ev) => {\r\n    ev.preventDefault()\r\n    setProcessing(true)\r\n    const payload = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n      },\r\n    })\r\n    if (payload.error) {\r\n      setError(`Payment failed ${payload.error.message}`)\r\n      setProcessing(false)\r\n    } else {\r\n      setError(null)\r\n      setProcessing(false)\r\n      setSucceeded(true)\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"CheckoutForm\">\r\n      <form className=\"stripeForm\" id=\"payment-form\" onSubmit={handleSubmit}>\r\n        <CardElement\r\n          id=\"card-element\"\r\n          options={cardStyle}\r\n          onChange={handleChange}\r\n        />\r\n        <button disabled={processing || disabled || succeeded} id=\"submit\">\r\n          <span id=\"button-text\">\r\n            {processing ? (\r\n              <div className=\"spinner\" id=\"spinner\"></div>\r\n            ) : (\r\n              'Pay now'\r\n            )}\r\n          </span>\r\n        </button>\r\n        {/* Show any error that happens when processing the payment */}\r\n        {error && (\r\n          <div className=\"card-error\" role=\"alert\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        {/* Show a success message upon completion */}\r\n        <p className={succeeded ? 'result-message' : 'result-message hidden'}>\r\n          Payment succeeded, see the result in your\r\n          <a href={`https://dashboard.stripe.com/test/payments`}>\r\n            {' '}\r\n            Stripe dashboard.\r\n          </a>{' '}\r\n          Refresh the page to pay again.\r\n        </p>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { RiDeleteBinLine } from 'react-icons/ri'\r\nimport CheckoutForm from './CheckoutForm'\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\n\r\nclass ShoppingCart extends React.Component {\r\n\r\n  toUpper(word) {\r\n    if (word) return word[0].toUpperCase() + word.slice(1)\r\n  }\r\n  getCartItems() {\r\n    const { cart } = this.props.userInfo\r\n    if (cart) {\r\n      return cart.map((item, index) => {\r\n        return (\r\n          <div key={index} className=\"allItemsCart\">\r\n            <img src={item.plant.image} alt={item.plant.commonName} />\r\n            <div className=\"infoItemCart\">\r\n              <b>\r\n                <p>{this.toUpper(item.plant.commonName)}</p>\r\n              </b>\r\n              <p>\r\n                <b>Qty:</b> {item.quantity}\r\n              </p>\r\n              <p>\r\n                <b>Price:</b> {item.plant.price}€\r\n              </p>\r\n              <p>\r\n                <b>Total: </b>\r\n                {item.quantity * item.plant.price}€\r\n              </p>\r\n              <button onClick={() => this.props.deleteFromCart(item.plant._id)}>\r\n                <RiDeleteBinLine className=\"removeIcon\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    console.log('TOTAL PRICE PROPS DE SHOPPING CART' + this.props.totalPrice)\r\n    const promise = loadStripe(\r\n      'pk_test_51IrpUwINyfw3Ussjr5TrEoNC8GW0dM1LdTMSLYsAIhofMEO44bCM8br241Ywwi96IRkCNMgKI4kMoSI8nugv9CSA0097t9atRk'\r\n    )\r\n    return (\r\n      this.props.userInfo ? \r\n        (this.props.userInfo.cart.lenght === 0 ?\r\n          <h1>Your cart it's empty</h1>\r\n          :\r\n          <div className=\"ShoppingCart\">\r\n            <h1>Cart</h1>\r\n            {this.getCartItems()}\r\n            <p>\r\n              <b>Total: </b> {this.props.totalPrice}€\r\n              \r\n            <div className=\"CheckoutForm\">\r\n              <Elements stripe={promise}>\r\n                <CheckoutForm />\r\n              </Elements>\r\n            </div>\r\n            </p>\r\n          </div>\r\n        ) \r\n      : <h1>Login required</h1>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ShoppingCart\r\n","import './Login.scss'\r\nimport React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    user: {\r\n      username: '',\r\n      password: '',\r\n    },\r\n  }\r\n\r\n  login(){\r\n    axios({\r\n      method: 'post',\r\n      url: `http://localhost:5000/app/login`,\r\n      data: this.state.user,\r\n      withCredentials: true,\r\n    })\r\n      .then((result) => {\r\n        this.props.addMsg(result.data.message)\r\n        this.props.updateState('user')\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  handleInput(event) {\r\n    const { name, value } = event.target\r\n    this.setState({\r\n      ...this.state,\r\n      user: { ...this.state.user, [name]: value },\r\n    })\r\n  }\r\n\r\n  getLoginForm() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h2>Login</h2>\r\n        <form onSubmit={() => this.login()}>\r\n          <div>\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              onChange={(event) => this.handleInput(event)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={(event) => this.handleInput(event)}\r\n            />\r\n          </div>\r\n          <button>Log in</button> \r\n        </form>\r\n        <p>\r\n          Don't you have an account yet? Register by clicking<span> </span>\r\n          <Link onClick={()=>this.props.modalAction('open', 'signup')}>here</Link>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        {this.getLoginForm()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login\r\n","import './Signup.scss'\r\nimport React from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Signup extends React.Component {\r\n  state = {\r\n    user: {\r\n      username: ``,\r\n      password: ``,\r\n    },\r\n    successSignup: false,\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n    axios({\r\n      method: 'post',\r\n      url: 'http://localhost:5000/app/signup',\r\n      data: this.state.user,\r\n    })\r\n      .then((result) => {\r\n        if (result.data.successSignup)\r\n          this.setState({ ...this.state, successSignup: true })\r\n        this.props.addMsg(result.data.message)\r\n        this.props.modalAction('close')\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { value, name } = event.target\r\n    this.setState({\r\n      ...this.state,\r\n      user: { ...this.state.user, [name]: value },\r\n    })\r\n  }\r\n\r\n  showSignup() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h2>Sign up</h2>\r\n        <form className=\"form\" onSubmit={(event) => this.handleSubmit(event)}>\r\n          <div className=\"form-field\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              onChange={(event) => this.handleChange(event)}\r\n            />\r\n          </div>\r\n          <div className=\"form-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={(event) => this.handleChange(event)}\r\n            />\r\n          </div>\r\n          <button>Register new user</button>\r\n        </form>\r\n        <p>\r\n          Do you have an account? Log in<span> </span>\r\n          <Link onClick={()=>this.props.modalAction('open', 'login')}>here</Link>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return this.state.successSignup ? (\r\n      <Redirect to=\"#openModal\" />\r\n    ) : (\r\n      <div className=\"Signup\">{this.showSignup()}</div>\r\n    )\r\n  }\r\n}\r\nexport default Signup\r\n","import './NewPost.scss'\r\nimport React from 'react'\r\nimport axios from 'axios'\r\n\r\nclass NewPost extends React.Component {\r\n\r\n  state = {\r\n    newPost: {}\r\n  }\r\n  \r\n  handleSubmit(event, data, url) {\r\n    event.preventDefault()\r\n    axios({\r\n      method: 'post',\r\n      url: `http://localhost:5000/app/${url}`,\r\n      data: data,\r\n      withCredentials: true,\r\n    })\r\n      .then((result) => {\r\n        this.props.addMsg(result.data.data.message)\r\n        this.props.updateState('posts')\r\n        this.props.modalAction('close')\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  handleInput(event) {\r\n    const { name, value } = event.target\r\n    this.setState({\r\n      ...this.state,\r\n      newPost: { ...this.state.newPost, [name]: value },\r\n    })\r\n  }\r\n\r\n  getNewPostForm() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <form\r\n          className=\"form\"\r\n          onSubmit={(ev) => this.handleSubmit(ev, this.state.newPost, 'new-post')}\r\n        >\r\n          <h2>New post</h2>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    onChange={(event) => this.handleInput(event)}\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Post title\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    onChange={(event) => this.handleInput(event)}\r\n                    type=\"text\"\r\n                    name=\"image\"\r\n                    placeholder=\"Image URL\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"2\">\r\n                  <textarea\r\n                    id=\"new-post-textarea\"\r\n                    onChange={(event) => this.handleInput(event)}\r\n                    type=\"text\"\r\n                    name=\"content\"\r\n                    placeholder=\"Post content\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <button>Create new post</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"NewPost\">\r\n        {this.getNewPostForm()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NewPost\r\n","import './Modal.scss'\r\nimport React from 'react'\r\n\r\nimport 'react-responsive-modal/styles.css'\r\nimport { Modal } from \"react-responsive-modal\";\r\n\r\n\r\nimport Login from '../Login/Login'\r\nimport Signup from '../Signup/Signup'\r\nimport NewPost from '../NewPost/NewPost'\r\n\r\n\r\nclass ModalComponent extends React.Component {\r\n  showModal() {\r\n\r\n    if(this.props.modal === 'login') {\r\n      return (\r\n        <div>\r\n          <Modal open={this.props.modalOpened} onClose={()=>this.props.modalAction('close')}>\r\n            <Login \r\n              {...this.props}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      )\r\n    } else if(this.props.modal === 'signup'){\r\n      return (\r\n        <div>\r\n          <Modal open={this.props.modalOpened} onClose={()=>this.props.modalAction('close')}>\r\n            <Signup \r\n              {...this.props}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      )\r\n    } else if(this.props.modal === 'newPost'){\r\n      return(\r\n        <div>\r\n          <Modal open={this.props.modalOpened} onClose={()=>this.props.modalAction('close')}>\r\n            <NewPost\r\n              {...this.props}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"Modal\">{this.showModal()}</div>\r\n  }\r\n}\r\n\r\nexport default ModalComponent\r\n","import './App.scss'\r\nimport React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport ReactJson from 'react-json-view'\r\n\r\n//import { loadStripe } from '@stripe/stripe-js'\r\n//import { Elements } from '@stripe/react-stripe-js'\r\n\r\n//import CheckoutForm from './components/CheckoutForm'\r\nimport Admin from './components/Admin/Admin'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Message from './components/Message/Message'\r\nimport Homepage from './components/Homepage/Homepage'\r\nimport PlantDetails from './components/PlantDetails/PlantDetails'\r\nimport Blog from './components/Blog/Blog'\r\nimport Store from './components/Store/Store'\r\nimport Profile from './components/Profile/Profile'\r\nimport StoreItem from './components/StoreItem'\r\nimport ShoppingCart from './components/ShoppingCart'\r\nimport Modal from './components/Modal/Modal'\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    user: {\r\n      _id: '',\r\n      username: '',\r\n      password: '',\r\n      admin: false,\r\n      favoritePlants: [],\r\n      cart: [],\r\n      totalPrice: 0,\r\n    },\r\n    users: [],\r\n    plants: [],\r\n    posts: [],\r\n    message: '',\r\n    modal: '',\r\n    modalOpened: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateState('users')\r\n    this.updateState('plants')\r\n    this.updateState('posts')\r\n    this.updateState('user')\r\n  }\r\n  \r\n  updateState(url){\r\n    console.log(url)\r\n    axios({\r\n      method: 'get',\r\n      url: `http://localhost:5000/app/${url}`,\r\n      withCredentials: true,\r\n    })\r\n    .then((result) => {\r\n      console.log(result.data.data)\r\n      if(result.data.data){\r\n        this.setState({[url]: result.data.data})\r\n      } else {\r\n        this.setState({[url]: null})\r\n        // return <Redirect to=\"/\"/>\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  modalAction(action, mod) {\r\n    if(mod) {\r\n      this.setState({modal: mod})}\r\n      if(action === 'open'){\r\n        this.setState({modalOpened: true})\r\n      } else if(action === 'close'){\r\n        this.setState({modalOpened: false})\r\n      }\r\n  }\r\n    \r\n  authAction(data, url, onlyUpdateState){\r\n    if (onlyUpdateState){\r\n      this.updateUser()\r\n    } else {\r\n      axios({\r\n        method: 'post',\r\n        url: `http://localhost:5000/app/${url}`,\r\n        data: data,\r\n        withCredentials: true,\r\n      })\r\n        .then((result) => {\r\n          const message = result.data.message\r\n          this.setState({...this.state, message: message})\r\n          this.updateState('user')\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n\r\n  adminAction(data, url) {\r\n    const stateCopy = { ...this.state }\r\n    axios({\r\n      method: 'post',\r\n      url: `http://localhost:5000/app/${url}`,\r\n      data: data,\r\n      withCredentials: true,\r\n    })\r\n    .then((result) => {\r\n      const message = result.data.message\r\n      stateCopy.message = message\r\n      this.setState(stateCopy)\r\n      this.getUsers()\r\n      this.getPlants()\r\n      this.getPosts()\r\n      this.updateUser()\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  editStateFromStoreItems(selectedPlantId, quantity, totalPrice) {\r\n    axios({\r\n      method: 'post',\r\n      url: 'http://localhost:5000/app/add-to-cart',\r\n      data: {\r\n        plantId: selectedPlantId,\r\n        quantity: quantity,\r\n        user: this.state.user,\r\n        totalPrice: this.state.user.totalPrice\r\n      },\r\n      withCredentials: true,\r\n    })\r\n    .then((result) => {\r\n      console.log(result)\r\n      const stateCopy = { ...this.state }\r\n      stateCopy.message = result.data.message\r\n      \r\n      if(result.user===''){  //Planta actualizada (se recibe solo la planta)\r\n        let updatedPlant = result.data.updatedPlant\r\n        \r\n        const plantsWithoutUpdatedPlant = stateCopy.user.cart.filter((item)=>{\r\n          return updatedPlant.plant._id.toString() !== item.plant._id.toString()\r\n        })\r\n        \r\n        const updatedPlants = [ updatedPlant, ...plantsWithoutUpdatedPlant]\r\n        stateCopy.user.cart = updatedPlants\r\n        \r\n        } else if(result.updatedUser === '') {  //Planta nuevo anadida al carrito (Se recibe el usuario)\r\n        \r\n          let updatedUser = result.data.user\r\n          console.log(updatedUser)\r\n          stateCopy.user = updatedUser\r\n        }\r\n        //this.getTotalPrice()\r\n        this.setState(stateCopy)\r\n        this.updateState('user')\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n /*  getTotalPrice() {\r\n    const sum = this.state.user.cart.reduce((accumulator, element) => {\r\n      return accumulator += element.plant.price * element.quantity\r\n    }, 0)\r\n    console.log(sum)\r\n    const stateCopy = {...this.state}\r\n    stateCopy.user.totalPrice = sum\r\n    this.setState(stateCopy)\r\n  } */\r\n\r\n  editStateFromPlantDetails(selectedPlantId) { ////////////////\r\n    axios({\r\n      method: 'post',\r\n      url: `http://localhost:5000/app/add-to-favorites/${selectedPlantId}`,\r\n      data: { user: this.state.user },\r\n      withCredentials: true,\r\n    })\r\n    .then((result) => {\r\n      // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> check result\r\n      const stateCopy = { ...this.state }\r\n      stateCopy.user.favoritePlants.push(selectedPlantId)\r\n      stateCopy.message = result.data.message\r\n      this.setState(stateCopy)\r\n      this.updateUser()\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  deleteCartItem(id) {\r\n    axios({\r\n      method: 'post',\r\n      url: `http://localhost:5000/app/remove-from-cart/${id}`,\r\n      data: { user: this.state.user },\r\n      withCredentials: true,\r\n    })\r\n    .then((result) => {\r\n      console.log(result)\r\n      const cartItemsCopy = [...this.state.user.cart]\r\n      const updatedItems = cartItemsCopy.filter((item) => {\r\n        return item._id !== id\r\n      })\r\n      this.setState({\r\n        ...this.state,\r\n        user: { ...this.state.user, cart: updatedItems },\r\n      })\r\n      this.updateUser()\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  removeFavoritePlant(id) {\r\n    axios({\r\n      method: 'post',\r\n      url: `http://localhost:5000/app/remove-from-favorites/${id}`,\r\n      withCredentials: true,\r\n    })\r\n      .then((result) => {\r\n        this.setState({...this.state, message: result.data.message})\r\n        this.updateUser()\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  addMsg(msg) {\r\n    this.setState({ ...this.state, message: msg })\r\n  }\r\n\r\n  cleanMsg() {\r\n    this.setState({ ...this.state, message: '' })\r\n  }\r\n\r\n  render() {\r\n    console.log('>>>', this.state)\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar\r\n          modalAction={(action, mod)=>this.modalAction(action, mod)}\r\n          userInfo={this.state.user}\r\n          authAction={(data, url, upd) => this.authAction(data, url, upd)}\r\n        />\r\n        <Message msg={this.state.message} cleanMsg={() => this.cleanMsg()} />\r\n        <Modal\r\n          addMsg={(msg) => this.addMsg(msg)}\r\n          modal={this.state.modal}\r\n          modalAction={(action, mod) => this.modalAction(action, mod)}\r\n          modalOpened={this.state.modalOpened}\r\n          updateState={(url) => this.updateState(url)}\r\n          \r\n          authAction={(data, url, upd) => this.authAction(data, url, upd)}\r\n          \r\n          userInfo={this.state.user}\r\n          adminAction={(data, url) => this.adminAction(data, url)}\r\n          editStateFromNewPost={(body, message) => \r\n            this.editStateFromNewPost(body, message)}\r\n        />\r\n\r\n\r\n        <Switch>\r\n          <Route\r\n            path=\"/all-plants\"\r\n            exact\r\n            component={() => (\r\n              <ReactJson src={this.state.plants} theme=\"hopscotch\" />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            component={() => <Homepage allPlants={this.state.plants} />}\r\n          />\r\n          <Route\r\n            path=\"/plant-details/:_id\"\r\n            exact\r\n            component={(routeProps) => (\r\n              <PlantDetails\r\n                {...routeProps}\r\n                allPlants={this.state.plants}\r\n                userInfo={this.state.user}\r\n                setAppState={(selectedPlantId) =>\r\n                  this.editStateFromPlantDetails(selectedPlantId)\r\n                }\r\n                adminAction={(data, url) => this.adminAction(data, url)}\r\n              />\r\n            )}\r\n          />\r\n          <Route \r\n            path=\"/blog\" \r\n            exact \r\n            component={() => \r\n              <Blog \r\n                userInfo={this.state.user}\r\n                posts={this.state.posts}\r\n                modalAction={(action, mod)=>this.modalAction(action, mod)}\r\n              />} />\r\n          <Route\r\n            path=\"/store\"\r\n            exact\r\n            component={() => <Store allPlants={this.state.plants} />}\r\n          />\r\n          <Route\r\n            path=\"/store-items/:_id\"\r\n            exact\r\n            component={(routeProps) => (\r\n              <StoreItem\r\n                {...routeProps}\r\n                plants={this.state.plants}\r\n                userInfo={this.state.user}\r\n                editStateFromStoreItems={(selectedPlantId, quantity, totalPrice) =>\r\n                  this.editStateFromStoreItems(selectedPlantId, quantity, totalPrice)\r\n                }\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/admin\"\r\n            exact\r\n            component={() => (\r\n              <Admin\r\n                users={this.state.users}\r\n                plants={this.state.plants}\r\n                addMsg={(msg) => this.addMsg(msg)}\r\n                userInfo={this.state.user}\r\n                adminAction={(data, url) => this.adminAction(data, url)}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/profile\"\r\n            exact\r\n            component={(routeProps) => (\r\n              <Profile\r\n                {...routeProps}\r\n                userInfo={this.state.user}\r\n                removeFavoritePlant={(event) => this.removeFavoritePlant(event)}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/shopping-cart\"\r\n            exact\r\n            component={() => (\r\n              <ShoppingCart\r\n                userInfo={this.state.user}\r\n                deleteFromCart={(event) => this.deleteCartItem(event)}\r\n                totalPrice={this.state.user.totalPrice}\r\n              />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n"],"sourceRoot":""}